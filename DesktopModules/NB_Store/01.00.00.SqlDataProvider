/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Table Order due to contraints                    *****/
/***** NB_Store_Orders*****/
/***** NB_Store_Cart*****/
/***** NB_Store_Categories*****/
/***** NB_Store_OrderStatus*****/
/***** NB_Store_SalesRates*****/
/***** NB_Store_Settings*****/
/***** NB_Store_SettingsText*****/
/***** NB_Store_ShipRates*****/
/***** NB_Store_TaxRates*****/
/***** NB_Store_Address*****/
/***** NB_Store_Products*****/
/***** NB_Store_Models*****/
/***** NB_Store_CartItems*****/
/***** NB_Store_CategoryLang*****/
/***** NB_Store_ModelLang*****/
/***** NB_Store_Option*****/
/***** NB_Store_OptionLang*****/
/***** NB_Store_OptionValue*****/
/***** NB_Store_OptionValueLang*****/
/***** NB_Store_OrderDetails*****/
/***** NB_Store_ProductImage*****/
/***** NB_Store_ProductImageLang*****/
/***** NB_Store_Reviews*****/
/************************************************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Orders]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Orders] (
	[OrderID] [int] IDENTITY (1000, 1) NOT NULL ,
	[UserID] [int] NULL ,
	[PortalID] [int] NOT NULL ,
	[OrderNumber] [nvarchar] (50)  NULL ,
	[OrderDate] [datetime] NULL ,
	[ShipDate] [datetime] NULL ,
	[ShippingAddressID] [int] NULL ,
	[BillingAddressID] [int] NULL ,
	[AppliedTax] [money] NULL CONSTRAINT [DF_NB_Store_Orders_Tax] DEFAULT ((0)),
	[ShippingCost] [money] NULL CONSTRAINT [DF_NB_Store_Orders_ShippingCost] DEFAULT ((0)),
	[OrderIsPlaced] [bit] NULL CONSTRAINT [DF_NB_Store_Orders_OrderIsPlaced] DEFAULT ((0)),
	[OrderStatusID] [int] NULL CONSTRAINT [DF_NB_Store_Orders_OrderStatus] DEFAULT ((1)),
	[PayType] [nvarchar] (20)  NULL ,
	[CalculatedTax] [money] NULL ,
	[NoteMsg] [nvarchar] (500)  NULL ,
	[VATNumber] [nvarchar] (30)  NULL ,
	[Discount] [money] NULL ,
	[PromoCode] [nvarchar] (15)  NULL ,
	[Total] [money] NULL ,
	CONSTRAINT [PK_NB_Store_Orders] PRIMARY KEY  CLUSTERED 
	(
		[OrderID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Cart]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Cart]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Cart] (
	[CartID] [nvarchar] (50)  NOT NULL ,
	[PortalID] [int] NULL ,
	[UserID] [int] NULL ,
	[DateCreated] [datetime] NOT NULL CONSTRAINT [DF__NB_Store_Car__DateC__6482D9EB] DEFAULT (getdate()),
	[OrderID] [int] NULL ,
	CONSTRAINT [PK_NB_Store_Cart] PRIMARY KEY  CLUSTERED 
	(
		[CartID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Categories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Categories]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Categories] (
	[CategoryID] [int] IDENTITY (1, 1) NOT NULL ,
	[PortalID] [int] NOT NULL ,
	[Archived] [bit] NOT NULL CONSTRAINT [DF__NB_Store_Cat__Archi__6D181FEC] DEFAULT ((0)),
	[CreatedByUser] [nvarchar] (100)  NULL ,
	[CreatedDate] [datetime] NULL ,
	[ParentCategoryID] [int] NULL ,
	[ListOrder] [int] NULL ,
	CONSTRAINT [PK_NB_Store_Categories] PRIMARY KEY  CLUSTERED 
	(
		[CategoryID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_OrderStatus]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_OrderStatus]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] (
	[OrderStatusID] [int] NOT NULL ,
	[Lang] [nvarchar] (20)  NOT NULL ,
	[OrderStatusText] [nvarchar] (50)  NULL ,
	[ListOrder] [int] NULL ,
	CONSTRAINT [PK_NB_Store_OrderStatus] PRIMARY KEY  CLUSTERED 
	(
		[OrderStatusID],
		[Lang]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_SaleRates]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_SaleRates]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_SaleRates] (
	[ItemID] [int] IDENTITY (1, 1) NOT NULL ,
	[ObjectID] [int] NULL ,
	[SaleName] [nvarchar] (50)  NULL ,
	[SaleType] [nvarchar] (5)  NULL ,
	[SaleStartDate] [datetime] NULL ,
	[SaleEndDate] [datetime] NULL ,
	[DiscountAmount] [money] NULL ,
	[DiscountPercent] [numeric](16, 2) NULL ,
	[Disabled] [bit] NULL ,
	CONSTRAINT [PK_NB_Store_SaleRates] PRIMARY KEY  CLUSTERED 
	(
		[ItemID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO





if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Settings]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Settings]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Settings] (
	[PortalID] [int] NOT NULL ,
	[SettingName] [nvarchar] (50)  NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[SettingValue] [nvarchar] (2000)  NULL ,
	CONSTRAINT [PK_NB_Store_Settings] PRIMARY KEY  CLUSTERED 
	(
		[PortalID],
		[SettingName],
		[Lang]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_SettingsText]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_SettingsText]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_SettingsText] (
	[PortalID] [int] NOT NULL ,
	[SettingName] [nvarchar] (50)  NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[SettingText] [ntext]  NULL ,
	CONSTRAINT [PK_NB_Store_SettingsText] PRIMARY KEY  CLUSTERED 
	(
		[PortalID],
		[SettingName],
		[Lang]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_ShippingRates]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_ShippingRates]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] (
	[ItemId] [int] IDENTITY (1, 1) NOT NULL ,
	[Range1] [decimal](16, 2) NULL ,
	[Range2] [decimal](16, 2) NULL ,
	[ObjectId] [int] NULL ,
	[ShipCost] [decimal](16, 2) NULL ,
	[ShipType] [char] (3)  NULL ,
	[Disable] [bit] NULL ,
	[Description] [nvarchar] (50)  NULL ,
	[ProductWeight] [decimal](16, 2) NULL ,
	[ProductHeight] [decimal](16, 2) NULL ,
	[ProductLength] [decimal](16, 2) NULL ,
	[ProductWidth] [decimal](16, 2) NULL ,
	CONSTRAINT [PK_NB_Store_ShipAdmin] PRIMARY KEY  CLUSTERED 
	(
		[ItemId]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_TaxRates]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_TaxRates]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_TaxRates] (
	[ItemID] [int] IDENTITY (1, 1) NOT NULL ,
	[ObjectID] [int] NULL ,
	[TaxPercent] [decimal](16, 2) NULL ,
	[TaxDesc] [nvarchar] (50)  NULL ,
	[TaxType] [char] (3)  NULL ,
	[Disable] [bit] NULL ,
	CONSTRAINT [PK_NB_Store_TaxRates] PRIMARY KEY  CLUSTERED 
	(
		[ItemID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Address]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Address]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Address] (
	[AddressID] [int] IDENTITY (1, 1) NOT NULL ,
	[PortalID] [int] NOT NULL ,
	[UserID] [int] NOT NULL ,
	[AddressDescription] [nvarchar] (100)  NULL ,
	[AddressName] [nvarchar] (50)  NULL ,
	[Address1] [nvarchar] (100)  NULL ,
	[Address2] [nvarchar] (100)  NULL ,
	[City] [nvarchar] (100)  NULL ,
	[RegionCode] [nvarchar] (100)  NULL ,
	[CountryCode] [nvarchar] (100)  NULL ,
	[PostalCode] [nvarchar] (10)  NULL ,
	[Phone1] [nvarchar] (20)  NULL ,
	[Phone2] [nvarchar] (20)  NULL ,
	[PrimaryAddress] [bit] NOT NULL ,
	[CreatedByUser] [nvarchar] (100)  NULL ,
	[CreatedDate] [datetime] NULL ,
	[OrderID] [int] NULL ,
	CONSTRAINT [PK_NB_Store_Addresses] PRIMARY KEY  CLUSTERED 
	(
		[AddressID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_Address_NB_Store_Orders] FOREIGN KEY 
	(
		[OrderID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Orders] (
		[OrderID]
	)
) ON [PRIMARY]
GO


alter table {databaseOwner}[{objectQualifier}NB_Store_Address] nocheck constraint [FK_NB_Store_Address_NB_Store_Orders]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Products]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Products] (
	[ProductID] [int] IDENTITY (1, 1) NOT NULL ,
	[PortalID] [int] NOT NULL ,
	[CategoryID] [int] NOT NULL ,
	[Featured] [bit] NOT NULL CONSTRAINT [DF__NB_Store_Pro__Featu__6FF48C97] DEFAULT ((0)),
	[Archived] [bit] NOT NULL CONSTRAINT [DF__NB_Store_Pro__Archi__70E8B0D0] DEFAULT ((0)),
	[CreatedByUser] [nvarchar] (100)  NULL ,
	[CreatedDate] [datetime] NULL ,
	[IsDeleted] [bit] NOT NULL CONSTRAINT [DF_NB_Store_Products_IsDeleted] DEFAULT ((0)),
	[ProductRef] [nvarchar] (20)  NULL ,
	CONSTRAINT [PK_NB_Store_Products] PRIMARY KEY  CLUSTERED 
	(
		[ProductID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_Products_NB_Store_Categories] FOREIGN KEY 
	(
		[CategoryID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Categories] (
		[CategoryID]
	)
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Model]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Model]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Model] (
	[ModelID] [int] IDENTITY (1, 1) NOT NULL ,
	[ProductID] [int] NULL ,
	[CategoryID] [int] NULL ,
	[ListOrder] [int] NULL ,
	[UnitCost] [money] NULL ,
	[Barcode] [nvarchar] (20)  NULL ,
	[ModelRef] [nvarchar] (20)  NULL ,
	[QtyRemaining] [int] NULL ,
	[QtyTrans] [int] NULL ,
	[QtyTransDate] [datetime] NULL ,
	CONSTRAINT [PK_NB_Store_ProductVariant] PRIMARY KEY  CLUSTERED 
	(
		[ModelID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ProductVariant_NB_Store_Products] FOREIGN KEY 
	(
		[ProductID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Products] (
		[ProductID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_CartItems]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_CartItems]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_CartItems] (
	[ItemID] [int] IDENTITY (1, 1) NOT NULL ,
	[CartID] [nvarchar] (50)  NOT NULL ,
	[Quantity] [int] NOT NULL CONSTRAINT [DF__NB_Store_Car__Quant__675F4696] DEFAULT ((1)),
	[DateCreated] [datetime] NOT NULL CONSTRAINT [DF__NB_Store_Car__DateC__68536ACF] DEFAULT (getdate()),
	[UnitCost] [money] NULL ,
	[ModelID] [int] NULL ,
	[OptCode] [nvarchar] (50)  NULL ,
	[ItemDesc] [nvarchar] (200)  NULL ,
	[Discount] [money] NULL ,
	[Tax] [money] NULL ,
	CONSTRAINT [PK_NB_Store_CartItems] PRIMARY KEY  CLUSTERED 
	(
		[ItemID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_CartItems_NB_Store_Cart] FOREIGN KEY 
	(
		[CartID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Cart] (
		[CartID]
	) ON DELETE CASCADE ,
	CONSTRAINT [FK_NB_Store_CartItems_NB_Store_Model] FOREIGN KEY 
	(
		[ModelID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Model] (
		[ModelID]
	)
) ON [PRIMARY]
GO




if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_CategoryLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_CategoryLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_CategoryLang] (
	[CategoryID] [int] NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[CategoryName] [nvarchar] (50)  NULL ,
	[CategoryDesc] [nvarchar] (500)  NULL ,
	[Message] [ntext]  NULL ,
	CONSTRAINT [PK_NB_Store_CategoryLang] PRIMARY KEY  CLUSTERED 
	(
		[CategoryID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_CategoryLang_NB_Store_Categories] FOREIGN KEY 
	(
		[CategoryID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Categories] (
		[CategoryID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO




if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_ModelLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_ModelLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_ModelLang] (
	[ModelID] [int] NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[ModelName] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_NB_Store_ModelLang] PRIMARY KEY  CLUSTERED 
	(
		[ModelID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ModelLang_NB_Store_Model] FOREIGN KEY 
	(
		[ModelID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Model] (
		[ModelID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Option]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Option] (
	[OptionID] [int] IDENTITY (1, 1) NOT NULL ,
	[ProductID] [int] NULL ,
	[CategoryID] [int] NULL ,
	[ListOrder] [int] NULL ,
	CONSTRAINT [PK_NB_Store_ProductOption] PRIMARY KEY  CLUSTERED 
	(
		[OptionID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_Option_NB_Store_Products] FOREIGN KEY 
	(
		[ProductID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Products] (
		[ProductID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_OptionLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_OptionLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_OptionLang] (
	[OptionID] [int] NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[OptionDesc] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_NB_Store_OptionLang] PRIMARY KEY  CLUSTERED 
	(
		[OptionID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_OptionLang_NB_Store_Option] FOREIGN KEY 
	(
		[OptionID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Option] (
		[OptionID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_OptionValue]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_OptionValue]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_OptionValue] (
	[OptionValueID] [int] IDENTITY (1, 1) NOT NULL ,
	[OptionID] [int] NULL ,
	[AddedCost] [money] NULL ,
	[ListOrder] [int] NULL ,
	CONSTRAINT [PK_NB_Store_ProductOptionValue] PRIMARY KEY  CLUSTERED 
	(
		[OptionValueID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ProductOptionValue_NB_Store_ProductOption] FOREIGN KEY 
	(
		[OptionID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Option] (
		[OptionID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_OptionValueLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang] (
	[OptionValueID] [int] NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[OptionValueDesc] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_NB_Store_OptionValueLang] PRIMARY KEY  CLUSTERED 
	(
		[OptionValueID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_OptionValueLang_NB_Store_OptionValue] FOREIGN KEY 
	(
		[OptionValueID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_OptionValue] (
		[OptionValueID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_OrderDetails]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_OrderDetails]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_OrderDetails] (
	[OrderDetailID] [int] IDENTITY (1, 1) NOT NULL ,
	[OrderID] [int] NOT NULL ,
	[Quantity] [int] NOT NULL ,
	[UnitCost] [money] NOT NULL ,
	[ModelID] [int] NULL ,
	[OptCode] [nvarchar] (50)  NULL ,
	[ItemDesc] [nvarchar] (200)  NULL ,
	[Discount] [money] NULL ,
	[Tax] [money] NULL ,
	CONSTRAINT [PK_NB_Store_OrderDetails] PRIMARY KEY  CLUSTERED 
	(
		[OrderDetailID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_OrderDetails_NB_Store_Model] FOREIGN KEY 
	(
		[ModelID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Model] (
		[ModelID]
	),
	CONSTRAINT [FK_NB_Store_OrderDetails_NB_Store_Orders] FOREIGN KEY 
	(
		[OrderID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Orders] (
		[OrderID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO






if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_ProductImage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_ProductImage]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_ProductImage] (
	[ImageID] [int] IDENTITY (1, 1) NOT NULL ,
	[ProductID] [int] NULL ,
	[ImagePath] [nvarchar] (100)  NULL ,
	[ListOrder] [int] NULL ,
	[Hidden] [bit] NULL ,
	[ImageURL] [nvarchar] (100)  NULL ,
	CONSTRAINT [PK_NB_Store_ProductImage] PRIMARY KEY  CLUSTERED 
	(
		[ImageID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ProductImage_NB_Store_Products] FOREIGN KEY 
	(
		[ProductID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Products] (
		[ProductID]
	)
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_ProductImageLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang] (
	[ImageID] [int] NOT NULL ,
	[Lang] [nchar] (5)  NOT NULL ,
	[ImageDesc] [nvarchar] (200)  NULL ,
	CONSTRAINT [PK_NB_Store_ProductImageLang] PRIMARY KEY  CLUSTERED 
	(
		[ImageID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ProductImageLang_NB_Store_ProductImage] FOREIGN KEY 
	(
		[ImageID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_ProductImage] (
		[ImageID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_ProductLang]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_ProductLang]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_ProductLang] (
	[ProductID] [int] NOT NULL ,
	[Lang] [char] (5)  NOT NULL ,
	[Summary] [nvarchar] (1000)  NULL ,
	[Description] [ntext]  NULL ,
	[Manufacturer] [nvarchar] (50)  NULL ,
	[ProductName] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_NB_Store_ProductLang_1] PRIMARY KEY  CLUSTERED 
	(
		[ProductID],
		[Lang]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_ProductLang_NB_Store_Products] FOREIGN KEY 
	(
		[ProductID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Products] (
		[ProductID]
	) ON DELETE CASCADE 
) ON [PRIMARY]
GO




if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NB_Store_Reviews]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table {databaseOwner}[{objectQualifier}NB_Store_Reviews]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}NB_Store_Reviews] (
	[ReviewID] [int] IDENTITY (1, 1) NOT NULL ,
	[PortalID] [int] NOT NULL ,
	[ProductID] [int] NOT NULL ,
	[UserID] [int] NOT NULL ,
	[UserName] [nvarchar] (50)  NOT NULL ,
	[Rating] [int] NOT NULL ,
	[Comments] [nvarchar] (1000)  NULL ,
	[Authorized] [bit] NOT NULL ,
	[CreatedDate] [datetime] NULL ,
	CONSTRAINT [PK_NB_Store_Reviews] PRIMARY KEY  CLUSTERED 
	(
		[ReviewID]
	)  ON [PRIMARY] ,
	CONSTRAINT [FK_NB_Store_Reviews_NB_Store_Products] FOREIGN KEY 
	(
		[ProductID]
	) REFERENCES {databaseOwner}[{objectQualifier}NB_Store_Products] (
		[ProductID]
	)
) ON [PRIMARY]
GO





SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Address_Delete
@AddressID int
AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Address] 
	where AddressID = @AddressID 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Address_Get
@AddressID int
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Address] 
	where AddressID = @AddressID 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Update]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Address_Update]
(
@AddressID int,
@PortalID int,
@UserID int,
@AddressDescription nvarchar(100),
@AddressName nvarchar(50),
@Address1 nvarchar(100),
@Address2 nvarchar(100),
@City nvarchar(100),
@RegionCode nvarchar(100),
@CountryCode nvarchar(100),
@PostalCode nvarchar(10),
@Phone1 nvarchar(20),
@Phone2 nvarchar(20),
@PrimaryAddress bit,
@CreatedByUser nvarchar(100),
@CreatedDate datetime,
@OrderID int
)
AS
BEGIN

	if not exists (select AddressID from {databaseOwner}[{objectQualifier}NB_Store_Address] where AddressID = @AddressID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Address]
		(
		PortalID,
		UserID,
		AddressDescription,
		AddressName,
		Address1,
		Address2,
		City,
		RegionCode,
		CountryCode,
		PostalCode,
		Phone1,
		Phone2,
		PrimaryAddress,
		CreatedByUser,
		CreatedDate,
		OrderID
		)
		values
		(
		@PortalID,
		@UserID,
		@AddressDescription,
		@AddressName,
		@Address1,
		@Address2,
		@City,
		@RegionCode,
		@CountryCode,
		@PostalCode,
		@Phone1,
		@Phone2,
		@PrimaryAddress,
		@CreatedByUser,
		@CreatedDate,
		@OrderID
		)

		set @AddressID = @@Identity

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Address]
		set 
		PortalID = @PortalID,
		UserID = @UserID,
		AddressDescription = @AddressDescription,
		AddressName = @AddressName,
		Address1 = @Address1,
		Address2 = @Address2,
		City = @City,
		RegionCode = @RegionCode,
		CountryCode = @CountryCode,
		PostalCode = @PostalCode,
		Phone1 = @Phone1,
		Phone2 = @Phone2,
		PrimaryAddress = @PrimaryAddress,
		CreatedByUser = @CreatedByUser,
		CreatedDate = @CreatedDate,
		OrderID = @OrderID
		where AddressID = @AddressID 
	end

	exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Address_Get @AddressID

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Delete]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Delete]
@CartID nvarchar(50)

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Cart] 
	where CartID = @CartID
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Cart_Get
@CartID nvarchar(50)

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Cart] 
	where CartID = @CartID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Cart_Update]
(
@CartID nvarchar(50),
@PortalID int,
@UserID int,
@DateCreated datetime,
@OrderID int
)
AS
BEGIN

	if not exists (select CartID from {databaseOwner}[{objectQualifier}NB_Store_Cart] where CartID = @CartID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Cart]
		(
		CartID,
		PortalID,
		UserID,
		DateCreated,
		OrderID
		)
		values
		(
		@CartID,
		@PortalID,
		@UserID,
		@DateCreated,
		@OrderID
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Cart]
		set 
		PortalID = @PortalID,
		UserID = @UserID,
		DateCreated = @DateCreated,
		OrderID = @OrderID
		where CartID = @CartID 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_CartItems_Delete
@ItemID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_CartItems] 
where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Get]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Get]
@ItemID int
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_CartItems] 
	where ItemID = @ItemID
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetByOptCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetByOptCode]
GO



create     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetByOptCode]
@CartID nvarchar(100),
@OptCode nvarchar(100)
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_CartItems] 
	where CartID = @CartID
	and OptCode = @OptCode
 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetCartList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetCartList]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetCartList]
@CartID nvarchar(50)
AS
begin
	select ItemID,
ItemDesc,
UnitCost,
Quantity,
(Quantity * UnitCost) as SubTotal
	from {databaseOwner}[{objectQualifier}NB_Store_CartItems] 
	where CartID = @CartID
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetList]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_GetList]
@CartID nvarchar(50)
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_CartItems] 
	where CartID = @CartID
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_CartItems_Update]
(
@ItemID int,
@CartID nvarchar(50),
@Quantity int,
@DateCreated datetime,
@UnitCost money,
@ModelID int,
@OptCode nvarchar(50),
@ItemDesc nvarchar(200),
@Discount money,
@Tax money

)
AS
BEGIN

	if not exists (select ItemID from {databaseOwner}[{objectQualifier}NB_Store_CartItems] where ItemID = @ItemID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_CartItems]
		(
		CartID,
		Quantity,
		DateCreated,
		UnitCost,
		ModelID,
		OptCode,
		ItemDesc,
		Discount,
		Tax
		)
		values
		(
		@CartID,
		@Quantity,
		@DateCreated,
		@UnitCost,
		@ModelID,
		@OptCode,
		@ItemDesc,
		@Discount,
		@Tax
		)
	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_CartItems]
		set 
		CartID = @CartID,
		Quantity = @Quantity,
		DateCreated = @DateCreated,
		UnitCost = @UnitCost,
		ModelID = @ModelID,
		OptCode = @OptCode,
		ItemDesc = @ItemDesc,
		Discount = @Discount,
		Tax = @Tax
		where ItemID = @ItemID 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Categories_Delete
@CategoryID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Categories] 
where CategoryID = @CategoryID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Get]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Get]
@CategoryID int,
@Lang nchar(5)
AS
begin
	select
		C.CategoryID,
		CL.Lang,
		CL.CategoryName,
		CL.CategoryDesc,
		CL.[Message],
		C.PortalID,
		C.Archived,
		C.CreatedByUser,
		C.CreatedDate,
		C.ParentCategoryID,
		PCL.CategoryName as ParentName,
		C.ListOrder
from {databaseOwner}[{objectQualifier}NB_Store_Categories] as C
inner join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS CL on CL.CategoryID = C.CategoryID and CL.Lang = @Lang
left outer join {databaseOwner}[{objectQualifier}NB_Store_Categories] as PC on C.ParentCategoryID = PC.CategoryID 
left outer join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS PCL on PCL.CategoryID = PC.CategoryID and PCL.Lang = @Lang
where C.CategoryID = @CategoryID
 
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_GetList]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_GetList]
@PortalID int,
@Lang nchar(5),
@ParentCategoryID int
AS
begin

if @ParentCategoryID = -1
begin

	select 
		C.CategoryID,
		CL.Lang,
		CL.CategoryName,
		CL.CategoryDesc,
		CL.[Message],
		C.PortalID,
		C.Archived,
		C.CreatedByUser,
		C.CreatedDate,
		C.ParentCategoryID,
		PCL.CategoryName as ParentName,
		C.ListOrder
from {databaseOwner}[{objectQualifier}NB_Store_Categories] as C
left outer join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS CL on CL.CategoryID = C.CategoryID and CL.Lang = @Lang
left outer join {databaseOwner}[{objectQualifier}NB_Store_Categories] as PC on C.ParentCategoryID = PC.CategoryID 
left outer join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS PCL on PCL.CategoryID = PC.CategoryID and PCL.Lang = @Lang
where C.PortalID = @PortalID
order by PCL.CategoryName, CL.CategoryName

end 
else
begin

	select 
		C.CategoryID,
		CL.Lang,
		CL.CategoryName,
		CL.CategoryDesc,
		CL.[Message],
		C.PortalID,
		C.Archived,
		C.CreatedByUser,
		C.CreatedDate,
		C.ParentCategoryID,
		PCL.CategoryName as ParentName,
		C.ListOrder
from {databaseOwner}[{objectQualifier}NB_Store_Categories] as C
left outer join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS CL on CL.CategoryID = C.CategoryID and CL.Lang = @Lang
left outer join {databaseOwner}[{objectQualifier}NB_Store_Categories] as PC on C.ParentCategoryID = PC.CategoryID 
left outer join {databaseOwner}{objectQualifier}NB_Store_CategoryLang AS PCL on PCL.CategoryID = PC.CategoryID and PCL.Lang = @Lang
where C.PortalID = @PortalID
and C.ParentCategoryID = @ParentCategoryID
order by PCL.CategoryName, CL.CategoryName

end

 
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Update]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Categories_Update]
(
@CategoryID int,
@Lang nchar(5),
@CategoryName nvarchar(50),
@CategoryDesc nvarchar(500),
@Message ntext,
@PortalID int,
@Archived bit,
@CreatedByUser nvarchar(100),
@CreatedDate datetime,
@ParentCategoryID int,
@ListOrder int
)
AS
BEGIN

	if not exists (select CategoryID from {databaseOwner}[{objectQualifier}NB_Store_Categories] where CategoryID = @CategoryID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Categories]
		(
		PortalID,
		Archived,
		CreatedByUser,
		CreatedDate,
		ParentCategoryID,
		ListOrder
		)
		values
		(
		@PortalID,
		@Archived,
		@CreatedByUser,
		@CreatedDate,
		@ParentCategoryID,
		@ListOrder
		)
		set @CategoryID = @@identity
	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Categories]
		set 
		PortalID = @PortalID,
		Archived = @Archived,
		CreatedByUser = @CreatedByUser,
		CreatedDate = @CreatedDate,
		ParentCategoryID = @ParentCategoryID,
		ListOrder = @ListOrder
		where CategoryID = @CategoryID 
	end

	if not exists (select CategoryID from {databaseOwner}[{objectQualifier}NB_Store_CategoryLang] where CategoryID = @CategoryID and Lang = @Lang)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_CategoryLang]
		(
		CategoryID,
		Lang,
		CategoryName,
		CategoryDesc,
		[Message]
		)
		values
		(
		@CategoryID,
		@Lang,
		@CategoryName,
		@CategoryDesc,
		@Message
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_CategoryLang]
		set 
		CategoryName = @CategoryName,
		CategoryDesc = @CategoryDesc,
		[Message] = @Message
		where CategoryID = @CategoryID
		and Lang = @Lang 
	end

exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Categories_Get @CategoryID,@Lang

END


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_GetUsers]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_GetUsers]
GO



create procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_GetUsers]
@PortalID int,
@Filter nvarchar(50)
as

select *
from {databaseOwner}{objectQualifier}Users U
left join {databaseOwner}{objectQualifier}UserPortals UP on U.UserId = UP.UserId
where ( UP.PortalId = @PortalID or @PortalID is null )
and (U.FirstName like '%' + @Filter + '%' 
or U.LastName like '%' + @Filter + '%' 
or U.UserName like '%' + @Filter + '%' 
or U.Email like '%' + @Filter + '%' 
or U.DisplayName like '%' + @Filter + '%')
order by U.DisplayName   









GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Model_Delete
@ModelID int
AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Model] 
	where ModelID = @ModelID
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Get]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Get]
@ModelID int,
@Lang nchar(5)
AS
begin
	select 
		M.ModelID,
		M.ProductID,
		M.CategoryID,
		M.ListOrder,
		M.UnitCost,
		M.Barcode,
		M.ModelRef,
		ML.Lang,
		ML.ModelName,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
	from {databaseOwner}[{objectQualifier}NB_Store_Model] as M
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ModelLang] as ML on ML.ModelID = M.ModelID and ML.Lang = @Lang
	where M.ModelID = @ModelID
 end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetInStockList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetInStockList]
GO








create    PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetInStockList]
@ProductID int,
@Lang nchar(5)
AS
begin

	select 
		M.ModelID,
		M.ProductID,
		M.CategoryID,
		M.ListOrder,
		M.UnitCost,
		M.Barcode,
		M.ModelRef,
		ML.Lang,
		ML.ModelName,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
	from {databaseOwner}[{objectQualifier}NB_Store_Model] as M
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ModelLang] as ML on ML.ModelID = M.ModelID and ML.Lang = @Lang
	where M.ProductID = @ProductID	
	and (QtyRemaining > 0 or QtyRemaining < 0) 
	order by M.ListOrder
 
end








GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetList]
GO







CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetList]
@ProductID int,
@Lang nchar(5),
@CategoryID int
AS
begin

	select 
		M.ModelID,
		M.ProductID,
		M.CategoryID,
		M.ListOrder,
		M.UnitCost,
		M.Barcode,
		M.ModelRef,
		ML.Lang,
		ML.ModelName,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
	from {databaseOwner}[{objectQualifier}NB_Store_Model] as M
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ModelLang] as ML on ML.ModelID = M.ModelID and ML.Lang = @Lang
	where M.ProductID = @ProductID	
	and M.CategoryID = @CategoryID
	order by M.ListOrder
 
end







GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetStockList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetStockList]
GO









CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_GetStockList]
@Filter nvarchar(50),
@Lang nchar(5),
@CategoryID int
AS
begin

if @CategoryID = -1
begin

	select 
		M.ModelID,
		M.ProductID,
		M.CategoryID,
		M.ListOrder,
		M.UnitCost,
		M.Barcode,
		M.ModelRef,
		ML.Lang,
		ML.ModelName,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
	from {databaseOwner}[{objectQualifier}NB_Store_Model] as M
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ModelLang] as ML on ML.ModelID = M.ModelID and ML.Lang = @Lang
	where (ML.Modelname like @Filter 
	or M.Modelref like @Filter
	or M.Barcode like @Filter)
	order by ML.ModelName,M.ModelRef

end 
else
begin

	select 
		M.ModelID,
		M.ProductID,
		P.CategoryID,
		M.ListOrder,
		M.UnitCost,
		M.Barcode,
		M.ModelRef,
		ML.Lang,
		ML.ModelName,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
	from {databaseOwner}[{objectQualifier}NB_Store_Model] as M
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ModelLang] as ML on ML.ModelID = M.ModelID and ML.Lang = @Lang
	inner join {databaseOwner}{objectQualifier}NB_Store_Products as P on P.ProductID = M.ProductID
	where P.CategoryID = @CategoryID
	and (ML.Modelname like @Filter 
	or M.Modelref like @Filter
	or M.Barcode like @Filter)
	order by ML.ModelName,M.ModelRef 
end

end










GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Update]
GO






CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Model_Update]
(
@ModelID int,
@ProductID int,
@CategoryID int,
@ListOrder int,
@UnitCost money,
@Barcode nvarchar(20),
@ModelRef nvarchar(20),
@Lang nchar(5),
@ModelName nvarchar(50),
@QtyRemaining int,
@QtyTrans int,
@QtyTransDate datetime
)
AS
BEGIN

	if not exists (select ModelID from {databaseOwner}[{objectQualifier}NB_Store_Model] where ModelID = @ModelID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Model]
		(
		ProductID,
		CategoryID,
		ListOrder,
		UnitCost,
		Barcode,
		ModelRef,
		QtyRemaining,
		QtyTrans,
		QtyTransDate
		)
		values
		(
		@ProductID,
		@CategoryID,
		@ListOrder,
		@UnitCost,
		@Barcode,
		@ModelRef,
		@QtyRemaining,
		@QtyTrans,
		@QtyTransDate
		)
		
		set @ModelID = @@Identity
	
		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ModelLang_Update @ModelID, @Lang, @ModelName

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Model]
		set 
		ProductID = @ProductID,
		CategoryID = @CategoryID,
		ListOrder = @ListOrder,
		UnitCost = @UnitCost,
		Barcode = @Barcode,
		ModelRef = @ModelRef,
		QtyRemaining = @QtyRemaining,
		QtyTrans = @QtyTrans,
		QtyTransDate = @QtyTransDate
		where ModelID = @ModelID

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ModelLang_Update @ModelID, @Lang, @ModelName
 
	end

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ModelLang_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ModelLang_Update]
GO





CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ModelLang_Update]
(
@ModelID int,
@Lang nchar(5),
@ModelName nvarchar(50)
)
AS
BEGIN

	if not exists (select ModelID from {databaseOwner}[{objectQualifier}NB_Store_ModelLang] where ModelID = @ModelID and Lang = @Lang)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_ModelLang]
		(
		ModelID,	
		Lang,
		ModelName
		)
		values
		(
		@ModelID,
		@Lang,
		@ModelName
		)
	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_ModelLang]
		set 
		ModelName = @ModelName
		where ModelID = @ModelID
		and Lang = @Lang
	end

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Option_Delete
@OptionID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Option] 
where OptionID = @OptionID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Get]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Get]
@OptionID int,
@Lang nchar(5)
AS
begin
	
	select
		O.OptionID,
		O.ProductID,
		O.CategoryID,
		O.ListOrder,
		OL.Lang,
		OL.OptionDesc
	from {databaseOwner}[{objectQualifier}NB_Store_Option] as O
	left outer join {databaseOwner}[{objectQualifier}NB_Store_OptionLang] as OL on OL.OptionID = O.OptionID and OL.Lang = @Lang
	where O.OptionID = @OptionID
 
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_GetList]
GO





CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_GetList]
@ProductID int,
@Lang nchar(5),
@CategoryID int
AS
begin
	select
		O.OptionID,
		O.ProductID,
		O.CategoryID,
		O.ListOrder,
		OL.Lang,
		OL.OptionDesc
	from {databaseOwner}[{objectQualifier}NB_Store_Option] as O
	left outer join {databaseOwner}[{objectQualifier}NB_Store_OptionLang] as OL on OL.OptionID = O.OptionID and OL.Lang = @Lang
	where O.ProductID = @ProductID	
	and O.CategoryID = @CategoryID
	order by O.ListOrder

end





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Update]
GO





CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Option_Update]
(
@OptionID int,
@ProductID int,
@CategoryID int,
@ListOrder int,
@Lang nchar(5),
@OptionDesc nvarchar(50)
)
AS
BEGIN

	if not exists (select OptionID from {databaseOwner}[{objectQualifier}NB_Store_Option] where OptionID = @OptionID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Option]
		(
		ProductID,
		CategoryID,
		ListOrder
		)
		values
		(
		@ProductID,
		@CategoryID,
		@ListOrder
		)

		set @OptionID = @@Identity

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OptionLang_Update @OptionID,@Lang,@OptionDesc

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Option]
		set 
		ProductID = @ProductID,
		CategoryID = @CategoryID,
		ListOrder = @ListOrder
		where OptionID = @OptionID

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OptionLang_Update @OptionID,@Lang,@OptionDesc
 
	end

	exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Option_Get @OptionID,@Lang

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionLang_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionLang_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionLang_Update]
(
@OptionID int,
@Lang nchar(5),
@OptionDesc nvarchar(50)
)
AS
BEGIN

	if not exists (select OptionID from {databaseOwner}[{objectQualifier}NB_Store_OptionLang] where OptionID = @OptionID and Lang = @Lang)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_OptionLang]
		(
		OptionID,
		Lang,
		OptionDesc
		)
		values
		(
		@OptionID,
		@Lang,
		@OptionDesc
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_OptionLang]
		set 
		OptionDesc = @OptionDesc
		where OptionID = @OptionID
		and Lang = @Lang 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OptionValue_Delete
@OptionValueID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_OptionValue] 
where OptionValueID = @OptionValueID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Get]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Get]
@OptionValueID int,
@Lang nchar(5)
AS
begin
	select
OV.OptionValueID,
OV.OptionID,
OV.AddedCost,
OV.ListOrder,
OVL.Lang,
OVL.OptionValueDesc
from {databaseOwner}[{objectQualifier}NB_Store_OptionValue] as OV
left outer join {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang] as OVL on OVL.OptionValueID = OV.OptionValueID and OVL.Lang = @Lang
where OV.OptionValueID = @OptionValueID
 
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_GetList]
GO





CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_GetList]
@OptionID int,
@Lang nchar(5)
AS
begin
	select
OV.OptionValueID,
OV.OptionID,
OV.AddedCost,
OV.ListOrder,
OVL.Lang,
OVL.OptionValueDesc
from {databaseOwner}[{objectQualifier}NB_Store_OptionValue] as OV
left outer join {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang] as OVL on OVL.OptionValueID = OV.OptionValueID and OVL.Lang = @Lang
where OV.OptionID = @OptionID
order by OV.ListOrder
 
end





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValue_Update]
(
@OptionValueID int,
@OptionID int,
@AddedCost money,
@ListOrder int,
@Lang nchar(5),
@OptionValueDesc nvarchar(50)

)
AS
BEGIN

	if not exists (select OptionValueID from {databaseOwner}[{objectQualifier}NB_Store_OptionValue] where OptionValueID = @OptionValueID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_OptionValue]
		(
		OptionID,
		AddedCost,
		ListOrder
		)
		values
		(
		@OptionID,
		@AddedCost,
		@ListOrder
		)

		set @OptionValueID = @@Identity

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OptionValueLang_Update @OptionValueID,@Lang,@OptionValueDesc

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_OptionValue]
		set 
		OptionID = @OptionID,
		AddedCost = @AddedCost,
		ListOrder = @ListOrder
		where OptionValueID = @OptionValueID

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OptionValueLang_Update @OptionValueID,@Lang,@OptionValueDesc
 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValueLang_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValueLang_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OptionValueLang_Update]
(
@OptionValueID int,
@Lang nchar(5),
@OptionValueDesc nvarchar(50)
)
AS
BEGIN

	if not exists (select OptionValueID from {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang] where OptionValueID = @OptionValueID and Lang = @Lang )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang]
		(
		OptionValueID,
		Lang,
		OptionValueDesc
		)
		values
		(
		@OptionValueID,
		@Lang,
		@OptionValueDesc
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_OptionValueLang]
		set 
		OptionValueDesc = @OptionValueDesc
		where OptionValueID = @OptionValueID
		 and Lang = @Lang 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OrderDetails_Delete
@OrderDetailID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_OrderDetails] 
where OrderDetailID = @OrderDetailID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OrderDetails_Get
@OrderDetailID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_OrderDetails] 
	where OrderDetailID = @OrderDetailID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_GetList]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_GetList]
@OrderID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_OrderDetails] 
	where OrderID = @OrderID
 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Update]
GO





CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderDetails_Update]
(
@OrderDetailID int,
@OrderID int,
@Quantity int,
@UnitCost money,
@ModelID int,
@OptCode nvarchar(50),
@ItemDesc nvarchar(200),
@Discount money,
@Tax money
)
AS
BEGIN

	if not exists (select OrderDetailID from {databaseOwner}[{objectQualifier}NB_Store_OrderDetails] where OrderDetailID = @OrderDetailID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_OrderDetails]
		(
		OrderID,
		Quantity,
		UnitCost,
		ModelID,
		OptCode,
		ItemDesc,
		Discount,
		Tax
		)
		values
		(
		@OrderID,
		@Quantity,
		@UnitCost,
		@ModelID,
		@OptCode,
		@ItemDesc,
		@Discount,
		@Tax
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_OrderDetails]
		set 
		OrderID = @OrderID,
		Quantity = @Quantity,
		UnitCost = @UnitCost,
		ModelID = @ModelID,
		OptCode = @OptCode,
		ItemDesc = @ItemDesc,
		Discount = @Discount,
		Tax = @Tax
		where OrderDetailID = @OrderDetailID 
	end

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Orders_Delete
@OrderID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Orders] 
where OrderID = @OrderID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Orders_Get
@OrderID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Orders] 
	where OrderID = @OrderID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_GetList]
GO






CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_GetList]
@UserID int,
@FromDate DateTime,
@ToDate DateTime,
@StatusID int
AS
begin

declare @SQL nvarchar(1000)

set @SQL = 'select * from {databaseOwner}[{objectQualifier}NB_Store_Orders] '
set @SQL = @SQL + 'where (UserID = ' + convert(nvarchar(5),@UserID) + ' or ' + convert(nvarchar(5),@UserID) + ' = -1) '

	if not @FromDate is null 
	begin
		set @SQL = @SQL + ' and OrderDate between ''' +  convert(nvarchar(20),@FromDate) + ''' and dateadd(d,1,''' + convert(nvarchar(20),@ToDate) + ''') ' 
	end

	if @StatusID > 0  
	begin
		set @SQL = @SQL + ' and OrderStatusID = ' + convert(nvarchar(5),@StatusID) 
	end

set @SQL = @SQL + ' order by OrderDate desc' 

print @SQL 

EXEC sp_executesql @SQL

end






GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Update]
GO





CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Orders_Update]
(
@OrderID int,
@UserID int,
@PortalID int,
@OrderNumber nvarchar(50),
@OrderDate datetime,
@ShipDate datetime,
@ShippingAddressID int,
@BillingAddressID int,
@AppliedTax money,
@ShippingCost money,
@OrderIsPlaced bit,
@OrderStatusID int,
@PayType nvarchar(20),
@CalculatedTax money,
@NoteMsg nvarchar(500),
@VATNumber nvarchar(30),
@Discount money,
@PromoCode nvarchar(15),
@Total money
)
AS
BEGIN

	if not exists (select OrderID from {databaseOwner}[{objectQualifier}NB_Store_Orders] where OrderID = @OrderID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Orders]
		(
		UserID,
		PortalID,
		OrderNumber,
		OrderDate,
		ShipDate,
		ShippingAddressID,
		BillingAddressID,
		AppliedTax,
		ShippingCost,
		OrderIsPlaced,
		OrderStatusID,
		PayType,
		CalculatedTax,
		NoteMsg,
		VATNumber,
		Discount,
		PromoCode,
		Total
		)
		values
		(
		@UserID,
		@PortalID,
		@OrderNumber,
		@OrderDate,
		@ShipDate,
		@ShippingAddressID,
		@BillingAddressID,
		@AppliedTax,
		@ShippingCost,
		@OrderIsPlaced,
		@OrderStatusID,
		@PayType,
		@CalculatedTax,
		@NoteMsg,
		@VATNumber,
		@Discount,
		@PromoCode,
		@Total
		)

		set @OrderID = @@Identity

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Orders]
		set 
		UserID = @UserID,
		PortalID = @PortalID,
		OrderNumber = @OrderNumber,
		OrderDate = @OrderDate,
		ShipDate = @ShipDate,
		ShippingAddressID = @ShippingAddressID,
		BillingAddressID = @BillingAddressID,
		AppliedTax = @AppliedTax,
		ShippingCost = @ShippingCost,
		OrderIsPlaced = @OrderIsPlaced,
		OrderStatusID = @OrderStatusID,
		PayType = @PayType,
		CalculatedTax = @CalculatedTax,
		NoteMsg = @NoteMsg,
		VATNumber = @VATNumber,
		Discount = @Discount,
		PromoCode = @PromoCode,
		Total = @Total
		where OrderID = @OrderID 
	end

	exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Orders_Get @OrderID 

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OrderStatus_Delete
@OrderStatusID int,
@Lang nvarchar(20)

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] 
	where OrderStatusID = @OrderStatusID
	and Lang = @Lang 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OrderStatus_Get
@OrderStatusID int,
@Lang nvarchar(20)
AS
begin
	if not exists (select OrderStatusID,Lang from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] where OrderStatusID = @OrderStatusID and Lang = @Lang)
	begin
		select * from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] 
		where OrderStatusID = @OrderStatusID
		and Lang = 'XX'
	end
	else
	begin
		select * from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] 
		where OrderStatusID = @OrderStatusID
		and Lang = @Lang 
	end
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_GetList]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_GetList]
@Lang nvarchar(20)

AS
begin

if @Lang = ''
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] 
	order by listorder
end
else
begin

	if not exists(select top 1 Lang from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] where lang = @Lang)
	begin
		set @Lang = 'XX'
	end

	select * from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] 
	where Lang = @Lang
	order by listorder
end

end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_OrderStatus_Update]
GO




CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_OrderStatus_Update
(
@OrderStatusID int,
@Lang nvarchar(20),
@OrderStatusText nvarchar(50),
@ListOrder int
)
AS
BEGIN

	if not exists (select OrderStatusID,Lang from {databaseOwner}[{objectQualifier}NB_Store_OrderStatus] where OrderStatusID = @OrderStatusID and Lang = @Lang)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_OrderStatus]
		(
		OrderStatusID,
		Lang,
		OrderStatusText,
		ListOrder
		)
		values
		(
		@OrderStatusID,
		@Lang,
		@OrderStatusText,
		@ListOrder
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_OrderStatus]
		set 
		OrderStatusText = @OrderStatusText,
		ListOrder = @ListOrder
		where OrderStatusID = @OrderStatusID and Lang = @Lang 
	end

END


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ProductImage_Delete
@ImageID int
AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_ProductImage] 
where ImageID = @ImageID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Get]
GO




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Get]
@ImageID int,
@Lang nchar(5)
AS
begin
	select 
		P.ImageID,
		P.ProductID,
		P.ImagePath,
		P.ListOrder,
		P.Hidden,
		PL.Lang,
		PL.ImageDesc,
		P.ImageURL
	from {databaseOwner}[{objectQualifier}NB_Store_ProductImage] as P
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang] as PL on PL.ImageID = P.ImageID and Lang = @Lang
	where P.ImageID = @ImageID
 
end




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_GetList]
GO







CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_GetList]
@ProductID int,
@Lang nchar(5)
AS
begin
	select 
		P.ImageID,
		P.ProductID,
		P.ImagePath,
		P.ListOrder,
		P.Hidden,
		PL.Lang,
		PL.ImageDesc,
		P.ImageURL
	from {databaseOwner}[{objectQualifier}NB_Store_ProductImage] as P
	left outer join {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang] as PL on PL.ImageID = P.ImageID and Lang = @Lang
	where P.ProductID = @ProductID
	order by P.ListOrder

 
end







GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImage_Update]
(
@ImageID int,
@ProductID int,
@ImagePath nvarchar(100),
@ListOrder int,
@Hidden bit,
@Lang nchar(5),
@ImageDesc nvarchar(200),
@ImageURL nvarchar(100)
)
AS
BEGIN

	if not exists (select ImageID from {databaseOwner}[{objectQualifier}NB_Store_ProductImage] where ImageID = @ImageID)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_ProductImage]
		(
		ProductID,
		ImagePath,
		ListOrder,
		Hidden,
		ImageURL
		)
		values
		(
		@ProductID,
		@ImagePath,
		@ListOrder,
		@Hidden,
		@ImageURL
		)
		
		set @ImageID = @@Identity
	
	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_ProductImage]
		set 
		ProductID = @ProductID,
		ImagePath = @ImagePath,
		ListOrder = @ListOrder,
		Hidden = @Hidden,
		ImageURL = @ImageURL
		where ImageID = @ImageID
 
	end

	exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ProductImageLang_Update @ImageID,@Lang,@ImageDesc


END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImageLang_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductImageLang_Update]
GO



CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ProductImageLang_Update
(
@ImageID int,
@Lang nchar(5),
@ImageDesc nvarchar(200)
)
AS
BEGIN

	if not exists (select ImageID,Lang from {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang] where ImageID = @ImageID and Lang = @Lang)
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang]
		(
		ImageID,
		Lang,
		ImageDesc
		)
		values
		(
		@ImageID,
		@Lang,
		@ImageDesc
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_ProductImageLang]
		set 
		ImageDesc = @ImageDesc
		where ImageID = @ImageID
		and Lang = @Lang 
	end

END


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductLang_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductLang_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ProductLang_Update]
(
@ProductID int,
@Lang char(5),
@Summary nvarchar(1000),
@Description ntext,
@Manufacturer nvarchar(50),
@ProductName nvarchar(50)

)
AS
BEGIN

	if not exists (select ProductID from {databaseOwner}[{objectQualifier}NB_Store_ProductLang] where ProductID = @ProductID and Lang = @Lang)
	begin

		insert into {databaseOwner}[{objectQualifier}NB_Store_ProductLang]
		(
		ProductID,
		Lang,
		Summary,
		Description,
		Manufacturer,
		ProductName
		)
		values
		(
		@ProductID,
		@Lang,
		@Summary,
		@Description,
		@Manufacturer,
		@ProductName
		)

	end
	else
	begin

		Update {databaseOwner}[{objectQualifier}NB_Store_ProductLang]
		set 
		Summary = @Summary,
		Description = @Description,
		Manufacturer = @Manufacturer,
		ProductName = @ProductName
		where ProductID = @ProductID
		and Lang = @Lang
 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Products_Delete
@ProductID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Products] 
where ProductID = @ProductID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Get]
GO






CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Get]
@ProductID int,
@Lang char(5)
AS
begin
	select 
		P.ProductID,
		PortalID,
		CategoryID,
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		IsDeleted,
		ProductRef,
		Lang,
		Summary,
		Description,
		Manufacturer,
		isnull((select top 1 QtyRemaining from {databaseOwner}{objectQualifier}NB_Store_Model where productid = P.ProductID and (qtyremaining > 0 or qtyremaining < 0)),0) as QtyRemaining,
		(select top 1 ImageURL from {databaseOwner}{objectQualifier}NB_Store_ProductImage AS I where productid = P.ProductID) as ImageURL,
		(select top 1 ImageDesc from {databaseOwner}{objectQualifier}NB_Store_ProductImage AS I inner join {databaseOwner}{objectQualifier}NB_Store_ProductImageLang as IL on IL.ImageID = I.ImageID and IL.Lang = PL.Lang where productid = P.ProductID) as ImageDesc,
		PL.ProductName
	from {databaseOwner}[{objectQualifier}NB_Store_Products] as P
	inner join {databaseOwner}{objectQualifier}NB_Store_ProductLang as PL on P.ProductID = PL.ProductID and PL.Lang = @Lang
	where P.ProductID = @ProductID
 
end






GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_GetList]
GO







CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_GetList]
@PortalID int,
@CategoryID int,
@Lang char(5),
@Filter nvarchar(50)
AS
begin

	declare @SQL nvarchar(2000)

	set @SQL = 'select' 
	set @SQL = @SQL + ' P.ProductID,'
	set @SQL = @SQL + ' PortalID,'
	set @SQL = @SQL + ' CategoryID,'
	set @SQL = @SQL + ' Featured,'
	set @SQL = @SQL + ' Archived,'
	set @SQL = @SQL + ' CreatedByUser,'
	set @SQL = @SQL + ' CreatedDate,'
	set @SQL = @SQL + ' IsDeleted,'
	set @SQL = @SQL + ' ProductRef,'
	set @SQL = @SQL + ' Lang,'
	set @SQL = @SQL + ' Summary,'
	set @SQL = @SQL + ' Description,'
	set @SQL = @SQL + ' Manufacturer,'
	set @SQL = @SQL + ' isnull((select top 1 unitcost from {databaseOwner}{objectQualifier}NB_Store_Model where productid = P.ProductID and (qtyremaining > 0 or qtyremaining < 0) order by unitcost),0) as FromPrice,'
	set @SQL = @SQL + ' isnull((select top 1 QtyRemaining from {databaseOwner}{objectQualifier}NB_Store_Model where productid = P.ProductID and (qtyremaining > 0 or qtyremaining < 0) order by unitcost),0) as QtyRemaining,'
	set @SQL = @SQL + ' (select top 1 ImageURL from {databaseOwner}{objectQualifier}NB_Store_ProductImage AS I where productid = P.ProductID) as ImageURL,'
	set @SQL = @SQL + ' (select top 1 ImageDesc from {databaseOwner}{objectQualifier}NB_Store_ProductImage AS I inner join {databaseOwner}{objectQualifier}NB_Store_ProductImageLang as IL on IL.ImageID = I.ImageID and IL.Lang = PL.Lang where productid = P.ProductID) as ImageDesc,'
	set @SQL = @SQL + ' PL.ProductName'		
	set @SQL = @SQL + ' from {databaseOwner}[{objectQualifier}NB_Store_Products] as P'
	set @SQL = @SQL + ' inner join {databaseOwner}{objectQualifier}NB_Store_ProductLang as PL on P.ProductID = PL.ProductID and PL.Lang = ''' + @Lang + ''''
	set @SQL = @SQL + ' where P.PortalID = ' + convert(nvarchar(5),@PortalID)

	if @CategoryID > 0 
	begin
		set @SQL = @SQL + ' and P.CategoryID = ' + convert(nvarchar(5),@CategoryID)
	end

	if @Filter != ''
	begin
		set @SQL = @SQL + ' and (PL.ProductName like ''%' + @Filter + '%'' or P.ProductRef like ''%' + @Filter + '%'' )'
	end
	set @SQL = @SQL + ' order by PL.Manufacturer,P.ProductRef,PL.ProductName'

	exec sp_executesql @SQL
 
end







GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Update]
GO







CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Products_Update]
(
@ProductID int,
@PortalID int,
@CategoryID int,
@Featured bit,
@Archived bit,
@CreatedByUser nvarchar(100),
@CreatedDate datetime,
@IsDeleted bit,
@ProductRef nvarchar(20),
@Lang char(5),
@Summary nvarchar(1000),
@Description ntext,
@Manufacturer nvarchar(50),
@ProductName nvarchar(50)
)
AS
BEGIN

	if not exists (select ProductID from {databaseOwner}[{objectQualifier}NB_Store_Products] where ProductID = @ProductID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Products]
		(
		PortalID,
		CategoryID,
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		IsDeleted,
		ProductRef	
		)
		values
		(
		@PortalID,
		@CategoryID,
		@Featured,
		@Archived,
		@CreatedByUser,
		@CreatedDate,
		@IsDeleted,
		@ProductRef
		)

		set @ProductID = @@Identity

		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ProductLang_Update @ProductID, @Lang, @Summary, @Description, @Manufacturer, @ProductName

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Products]
		set 
		PortalID = @PortalID,
		CategoryID = @CategoryID,
		Featured = @Featured,
		Archived = @Archived,
		CreatedByUser = @CreatedByUser,
		CreatedDate = @CreatedDate,
		IsDeleted = @IsDeleted,
		ProductRef = @ProductRef
		where ProductID = @ProductID
 
		exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ProductLang_Update @ProductID, @Lang, @Summary, @Description, @Manufacturer, @ProductName

	end

exec {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Products_Get @ProductID, @Lang
END






GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Reviews_Delete
@ReviewID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Reviews] 
where ReviewID = @ReviewID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Reviews_Get
@ReviewID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Reviews] 
	where ReviewID = @ReviewID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_GetList]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Reviews_GetList
@ReviewID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Reviews] 
where ReviewID = @ReviewID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Reviews_Update]
GO



CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_Reviews_Update
(
@ReviewID int,
@PortalID int,
@ProductID int,
@UserID int,
@UserName nvarchar(50),
@Rating int,
@Comments nvarchar(1000),
@Authorized bit,
@CreatedDate datetime

)
AS
BEGIN

	if not exists (select ReviewID from {databaseOwner}[{objectQualifier}NB_Store_Reviews] where ReviewID = @ReviewID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Reviews]
		(
ReviewID,
PortalID,
ProductID,
UserID,
UserName,
Rating,
Comments,
Authorized,
CreatedDate

		)
		values
		(
@ReviewID,
@PortalID,
@ProductID,
@UserID,
@UserName,
@Rating,
@Comments,
@Authorized,
@CreatedDate

		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Reviews]
		set 
PortalID = @PortalID,
ProductID = @ProductID,
UserID = @UserID,
UserName = @UserName,
Rating = @Rating,
Comments = @Comments,
Authorized = @Authorized,
CreatedDate = @CreatedDate

		where ReviewID = @ReviewID
 
	end

END


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_SaleRates_Delete
@ItemID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_SaleRates] 
where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_SaleRates_Get
@ItemID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_SaleRates] 
	where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_GetList]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_SaleRates_GetList
@ItemID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_SaleRates] 
where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SaleRates_Update]
GO



CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_SaleRates_Update
(
@ItemID int,
@ObjectID int,
@SaleName nvarchar(50),
@SaleType nvarchar(5),
@SaleStartDate datetime,
@SaleEndDate datetime,
@DiscountAmount money,
@DiscountPercent numeric(16,2),
@Disabled bit

)
AS
BEGIN

	if not exists (select ItemID from {databaseOwner}[{objectQualifier}NB_Store_SaleRates] where ItemID = @ItemID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_SaleRates]
		(
ItemID,
ObjectID,
SaleName,
SaleType,
SaleStartDate,
SaleEndDate,
DiscountAmount,
DiscountPercent,
Disabled

		)
		values
		(
@ItemID,
@ObjectID,
@SaleName,
@SaleType,
@SaleStartDate,
@SaleEndDate,
@DiscountAmount,
@DiscountPercent,
@Disabled

		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_SaleRates]
		set 
ObjectID = @ObjectID,
SaleName = @SaleName,
SaleType = @SaleType,
SaleStartDate = @SaleStartDate,
SaleEndDate = @SaleEndDate,
DiscountAmount = @DiscountAmount,
DiscountPercent = @DiscountPercent,
Disabled = @Disabled

		where ItemID = @ItemID
 
	end

END


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Delete]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Delete]
@PortalID int,
@SettingName nvarchar(50)
AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_Settings] 
where PortalID = @PortalID
 and SettingName = @SettingName 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Get]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Get]
@PortalID int,
@SettingName nvarchar(50),
@Lang nchar(5)

AS
begin

if exists(
	select * from {databaseOwner}[{objectQualifier}NB_Store_Settings] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang)
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Settings] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang
end
else
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Settings] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = 'None'
end


 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_GetList]
GO






CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_GetList]
@PortalID int,
@Lang nchar(5)

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_Settings] 
where PortalID = @PortalID
 and (Lang = @Lang or Lang = 'None' or @Lang='')
order by settingname
 
end






GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Update]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_Settings_Update]
(
@PortalID int,
@SettingName nvarchar(50),
@Lang nchar(5),
@SettingValue nvarchar(2000)

)
AS
BEGIN

	if not exists (select PortalID,SettingName,Lang from {databaseOwner}[{objectQualifier}NB_Store_Settings] where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_Settings]
		(
		PortalID,
		SettingName,
		Lang,
		SettingValue
		)
		values
		(
		@PortalID,
		@SettingName,
		@Lang,
		@SettingValue
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_Settings]
		set 
		SettingValue = @SettingValue

		where PortalID = @PortalID
		 and SettingName = @SettingName
		 and Lang = @Lang 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Delete]
GO



CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Delete]
@PortalID int,
@SettingName nvarchar(50)

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] 
where PortalID = @PortalID
 and SettingName = @SettingName
 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Get]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Get]
@PortalID int,
@SettingName nvarchar(50),
@Lang nchar(5)

AS
begin
if exists(
	select settingName from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang)
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang
end
else
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] 
	where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = 'None'
end
 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_GetList]
GO


CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_GetList]
@PortalID int,
@Lang nchar(5)

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] 
where PortalID = @PortalID
 and (Lang = @Lang or Lang = 'None' or @Lang= '')
order by settingname
end







GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_SettingsText_Update]
(
@PortalID int,
@SettingName nvarchar(50),
@Lang nchar(5),
@SettingText ntext

)
AS
BEGIN

	if not exists (select PortalID,SettingName,Lang from {databaseOwner}[{objectQualifier}NB_Store_SettingsText] where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_SettingsText]
		(
PortalID,
SettingName,
Lang,
SettingText

		)
		values
		(
@PortalID,
@SettingName,
@Lang,
@SettingText

		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_SettingsText]
		set 
		SettingText = @SettingText

		where PortalID = @PortalID
 and SettingName = @SettingName
 and Lang = @Lang
 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ShippingRates_Delete
@ItemId int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] 
where ItemId = @ItemId
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_ShippingRates_Get
@ItemId int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] 
	where ItemId = @ItemId
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetByObjID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetByObjID]
GO



create    PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetByObjID]
@ObjectId int,
@ShipType char(3)
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] 
	where ObjectId = @ObjectId
	and ShipType = @ShipType
end





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetList]
GO





CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_GetList]
@ShipType varchar(5),
@Lang varchar(5),
@Filter varchar(50)
AS
begin

	if @ShipType = 'PRD'
	begin
		select 
		isnull(SR.ItemId,-1) as Itemid,
		SR.Range1,
		SR.Range2,
		SM.ModelID as ObjectId,
		SR.ShipCost,
		'PRD' as ShipType,
		SR.[Disable],
		sm.modelref + ' - ' + SML.ModelName as Description,
		SR.ProductWeight,
		SR.ProductHeight,
		SR.ProductLength,
		SR.ProductWidth
		from {databaseOwner}{objectQualifier}NB_Store_Model AS SM
		left outer join {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] as SR on SM.ModelID = SR.ObjectID and SR.ShipType = 'PRD'
		inner join {databaseOwner}{objectQualifier}NB_Store_ModelLang AS SML on SML.ModelID = SM.ModelID and SML.Lang = @Lang
		where SML.ModelName like '%' + @Filter + '%' 
		or sm.modelref like '%' + @Filter + '%'
		order by SML.ModelName
	end
	else
	begin
		select * from {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] 
		where ShipType = @ShipType
		order by Range1
	end 
end





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Update]
GO




CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_ShippingRates_Update]
(
@ItemId int,
@Range1 decimal(9,2),
@Range2 decimal(9,2),
@ObjectId int,
@ShipCost decimal(9,2),
@ShipType char(3),
@Disable bit,
@Description nvarchar(50),
@ProductWeight decimal(9,2),
@ProductHeight decimal(9,2),
@ProductLength decimal(9,2),
@ProductWidth decimal(9,2)
)
AS
BEGIN

	if not exists (select ItemId from {databaseOwner}[{objectQualifier}NB_Store_ShippingRates] where ItemId = @ItemId
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_ShippingRates]
		(
		Range1,
		Range2,
		ObjectId,
		ShipCost,
		ShipType,
		Disable,
		Description,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth
		)
		values
		(
		@Range1,
		@Range2,
		@ObjectId,
		@ShipCost,
		@ShipType,
		@Disable,
		@Description,
		@ProductWeight,
		@ProductHeight,
		@ProductLength,
		@ProductWidth
		)
	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_ShippingRates]
		set 
		Range1 = @Range1,
		Range2 = @Range2,
		ObjectId = @ObjectId,
		ShipCost = @ShipCost,
		ShipType = @ShipType,
		Disable = @Disable,
		Description = @Description,
		ProductWeight = @ProductWeight,
		ProductHeight = @ProductHeight,
		ProductLength = @ProductLength,
		ProductWidth = @ProductWidth
		where ItemId = @ItemId 
	end

END



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Delete]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Delete]
GO


CREATE   PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_TaxRates_Delete
@ItemID int

AS
begin
	delete from {databaseOwner}[{objectQualifier}NB_Store_TaxRates] 
where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Get]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Get]
GO


CREATE     PROCEDURE {databaseOwner}{objectQualifier}NEvoweb_NB_Store_TaxRates_Get
@ItemID int

AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_TaxRates] 
	where ItemID = @ItemID
 
end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetByObjID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetByObjID]
GO



create     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetByObjID]
@ObjectId int,
@TaxType char(3)
AS
begin
	select * from {databaseOwner}[{objectQualifier}NB_Store_TaxRates] 
	where ObjectId = @ObjectId
	and TaxType = @TaxType
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetList]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetList]
GO



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_GetList]
@TaxType varchar(5),
@Lang varchar(5),
@Filter varchar(50)
AS
begin

	if @TaxType = 'PRD'
	begin
		select 
		isnull(TR.ItemId,-1) as Itemid,
		SM.ModelID as ObjectId,
		TR.TaxPercent,
		'PRD' as TaxType,
		TR.[Disable],
		sm.modelref + ' - ' + SML.ModelName as TaxDesc
		from {databaseOwner}{objectQualifier}NB_Store_Model AS SM
		left outer join {databaseOwner}[{objectQualifier}NB_Store_TaxRates] as TR on SM.ModelID = TR.ObjectID and TR.TaxType = 'PRD'
		inner join {databaseOwner}{objectQualifier}NB_Store_ModelLang AS SML on SML.ModelID = SM.ModelID and SML.Lang = @Lang
		where SML.ModelName like '%' + @Filter + '%' 
		or sm.modelref like '%' + @Filter + '%'
		order by SML.ModelName
	end
	else
	begin
		select * from {databaseOwner}[{objectQualifier}NB_Store_TaxRates] 
		where TaxType = @TaxType
		order by TaxDesc
	end
 
end



GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Update]
GO





CREATE   PROCEDURE {databaseOwner}[{objectQualifier}NEvoweb_NB_Store_TaxRates_Update]
(
@ItemID int,
@ObjectID int,
@TaxPercent decimal(16,2),
@TaxDesc nvarchar(50),
@TaxType char(3),
@Disable bit

)
AS
BEGIN

	if not exists (select ItemID from {databaseOwner}[{objectQualifier}NB_Store_TaxRates] where ItemID = @ItemID
 )
	begin
		insert into {databaseOwner}[{objectQualifier}NB_Store_TaxRates]
		(
		ObjectID,
		TaxPercent,
		TaxDesc,
		TaxType,
		[Disable]
		)
		values
		(
		@ObjectID,
		@TaxPercent,
		@TaxDesc,
		@TaxType,
		@Disable
		)

	end
	else
	begin
		Update {databaseOwner}[{objectQualifier}NB_Store_TaxRates]
		set 
		ObjectID = @ObjectID,
		TaxPercent = @TaxPercent,
		TaxDesc = @TaxDesc,
		TaxType = @TaxType,
		Disable = @Disable
		where ItemID = @ItemID 
	end

END




GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


