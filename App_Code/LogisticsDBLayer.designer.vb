'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Logistics")>  _
Partial Public Class LogisticsDBLayerDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertLogisticProduct(instance As LogisticProduct)
    End Sub
  Partial Private Sub UpdateLogisticProduct(instance As LogisticProduct)
    End Sub
  Partial Private Sub DeleteLogisticProduct(instance As LogisticProduct)
    End Sub
  Partial Private Sub InsertLogisticProductLocation(instance As LogisticProductLocation)
    End Sub
  Partial Private Sub UpdateLogisticProductLocation(instance As LogisticProductLocation)
    End Sub
  Partial Private Sub DeleteLogisticProductLocation(instance As LogisticProductLocation)
    End Sub
  Partial Private Sub InsertCustomer(instance As Customer)
    End Sub
  Partial Private Sub UpdateCustomer(instance As Customer)
    End Sub
  Partial Private Sub DeleteCustomer(instance As Customer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LogisticsConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property LogisticProducts() As System.Data.Linq.Table(Of LogisticProduct)
		Get
			Return Me.GetTable(Of LogisticProduct)
		End Get
	End Property
	
	Public ReadOnly Property LogisticProductLocations() As System.Data.Linq.Table(Of LogisticProductLocation)
		Get
			Return Me.GetTable(Of LogisticProductLocation)
		End Get
	End Property
	
	Public ReadOnly Property Customers() As System.Data.Linq.Table(Of Customer)
		Get
			Return Me.GetTable(Of Customer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LogisticProduct")>  _
Partial Public Class LogisticProduct
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LogisticProductKey As Integer
	
	Private _CustomerKey As Integer
	
	Private _ProductCode As String
	
	Private _ProductDepartmentId As String
	
	Private _ProductDate As String
	
	Private _ProductDescription As String
	
	Private _LanguageId As String
	
	Private _ItemsPerBox As System.Nullable(Of Integer)
	
	Private _MinimumStockLevel As Integer
	
	Private _ArchiveFlag As Char
	
	Private _SerialNumbersFlag As Char
	
	Private _DeletedFlag As Char
	
	Private _LastUpdatedByKey As Integer
	
	Private _LastUpdatedOn As Date
	
	Private _UnitValue As Decimal
	
	Private _UnitWeightGrams As Integer
	
	Private _ProductCategory As String
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _SubCategory As String
	
	Private _StockOwnedByKey As System.Nullable(Of Integer)
	
	Private _Misc1 As String
	
	Private _Misc2 As String
	
	Private _Notes As String
	
	Private _ReplenishmentDate As System.Nullable(Of Date)
	
	Private _UnitValueCurrency As System.Nullable(Of Integer)
	
	Private _ThumbNailImage As String
	
	Private _WebsiteAdRotatorFlag As Boolean
	
	Private _OriginalImage As String
	
	Private _PDFFileName As String
	
	Private _AdRotatorText As String
	
	Private _CreatedOn As Date
	
	Private _ViewOnWebForm As Boolean
	
	Private _RequiresAuthentication As Boolean
	
	Private _RotationProductKey As System.Nullable(Of Integer)
	
	Private _SubCategory2 As String
	
	Private _ProductOwner1 As System.Nullable(Of Integer)
	
	Private _ProductOwner2 As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Byte)
	
	Private _UnitValue2 As System.Nullable(Of Decimal)
	
	Private _Flag1 As System.Nullable(Of Boolean)
	
	Private _Flag2 As System.Nullable(Of Boolean)
	
	Private _InactivityAlertDays As System.Nullable(Of Integer)
	
	Private _CalendarManaged As System.Nullable(Of Boolean)
	
	Private _OnDemand As System.Nullable(Of Integer)
	
	Private _OnDemandPriceList As System.Nullable(Of Integer)
	
	Private _ZeroStockNotification As System.Nullable(Of Byte)
	
	Private _CustomLetter As System.Nullable(Of Boolean)
	
	Private _LogisticProductLocations As EntitySet(Of LogisticProductLocation)
	
	Private _Customer As EntityRef(Of Customer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLogisticProductKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLogisticProductKeyChanged()
    End Sub
    Partial Private Sub OnCustomerKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerKeyChanged()
    End Sub
    Partial Private Sub OnProductCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProductCodeChanged()
    End Sub
    Partial Private Sub OnProductDepartmentIdChanging(value As String)
    End Sub
    Partial Private Sub OnProductDepartmentIdChanged()
    End Sub
    Partial Private Sub OnProductDateChanging(value As String)
    End Sub
    Partial Private Sub OnProductDateChanged()
    End Sub
    Partial Private Sub OnProductDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnProductDescriptionChanged()
    End Sub
    Partial Private Sub OnLanguageIdChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageIdChanged()
    End Sub
    Partial Private Sub OnItemsPerBoxChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnItemsPerBoxChanged()
    End Sub
    Partial Private Sub OnMinimumStockLevelChanging(value As Integer)
    End Sub
    Partial Private Sub OnMinimumStockLevelChanged()
    End Sub
    Partial Private Sub OnArchiveFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnArchiveFlagChanged()
    End Sub
    Partial Private Sub OnSerialNumbersFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnSerialNumbersFlagChanged()
    End Sub
    Partial Private Sub OnDeletedFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnDeletedFlagChanged()
    End Sub
    Partial Private Sub OnLastUpdatedByKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLastUpdatedByKeyChanged()
    End Sub
    Partial Private Sub OnLastUpdatedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnLastUpdatedOnChanged()
    End Sub
    Partial Private Sub OnUnitValueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUnitValueChanged()
    End Sub
    Partial Private Sub OnUnitWeightGramsChanging(value As Integer)
    End Sub
    Partial Private Sub OnUnitWeightGramsChanged()
    End Sub
    Partial Private Sub OnProductCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnProductCategoryChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnSubCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnSubCategoryChanged()
    End Sub
    Partial Private Sub OnStockOwnedByKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStockOwnedByKeyChanged()
    End Sub
    Partial Private Sub OnMisc1Changing(value As String)
    End Sub
    Partial Private Sub OnMisc1Changed()
    End Sub
    Partial Private Sub OnMisc2Changing(value As String)
    End Sub
    Partial Private Sub OnMisc2Changed()
    End Sub
    Partial Private Sub OnNotesChanging(value As String)
    End Sub
    Partial Private Sub OnNotesChanged()
    End Sub
    Partial Private Sub OnReplenishmentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReplenishmentDateChanged()
    End Sub
    Partial Private Sub OnUnitValueCurrencyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUnitValueCurrencyChanged()
    End Sub
    Partial Private Sub OnThumbNailImageChanging(value As String)
    End Sub
    Partial Private Sub OnThumbNailImageChanged()
    End Sub
    Partial Private Sub OnWebsiteAdRotatorFlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnWebsiteAdRotatorFlagChanged()
    End Sub
    Partial Private Sub OnOriginalImageChanging(value As String)
    End Sub
    Partial Private Sub OnOriginalImageChanged()
    End Sub
    Partial Private Sub OnPDFFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnPDFFileNameChanged()
    End Sub
    Partial Private Sub OnAdRotatorTextChanging(value As String)
    End Sub
    Partial Private Sub OnAdRotatorTextChanged()
    End Sub
    Partial Private Sub OnCreatedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnCreatedOnChanged()
    End Sub
    Partial Private Sub OnViewOnWebFormChanging(value As Boolean)
    End Sub
    Partial Private Sub OnViewOnWebFormChanged()
    End Sub
    Partial Private Sub OnRequiresAuthenticationChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRequiresAuthenticationChanged()
    End Sub
    Partial Private Sub OnRotationProductKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRotationProductKeyChanged()
    End Sub
    Partial Private Sub OnSubCategory2Changing(value As String)
    End Sub
    Partial Private Sub OnSubCategory2Changed()
    End Sub
    Partial Private Sub OnProductOwner1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductOwner1Changed()
    End Sub
    Partial Private Sub OnProductOwner2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProductOwner2Changed()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnUnitValue2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnitValue2Changed()
    End Sub
    Partial Private Sub OnFlag1Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFlag1Changed()
    End Sub
    Partial Private Sub OnFlag2Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFlag2Changed()
    End Sub
    Partial Private Sub OnInactivityAlertDaysChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInactivityAlertDaysChanged()
    End Sub
    Partial Private Sub OnCalendarManagedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCalendarManagedChanged()
    End Sub
    Partial Private Sub OnOnDemandChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOnDemandChanged()
    End Sub
    Partial Private Sub OnOnDemandPriceListChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOnDemandPriceListChanged()
    End Sub
    Partial Private Sub OnZeroStockNotificationChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnZeroStockNotificationChanged()
    End Sub
    Partial Private Sub OnCustomLetterChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCustomLetterChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._LogisticProductLocations = New EntitySet(Of LogisticProductLocation)(AddressOf Me.attach_LogisticProductLocations, AddressOf Me.detach_LogisticProductLocations)
		Me._Customer = CType(Nothing, EntityRef(Of Customer))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogisticProductKey", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LogisticProductKey() As Integer
		Get
			Return Me._LogisticProductKey
		End Get
		Set
			If ((Me._LogisticProductKey = value)  _
						= false) Then
				Me.OnLogisticProductKeyChanging(value)
				Me.SendPropertyChanging
				Me._LogisticProductKey = value
				Me.SendPropertyChanged("LogisticProductKey")
				Me.OnLogisticProductKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerKey", DbType:="Int NOT NULL")>  _
	Public Property CustomerKey() As Integer
		Get
			Return Me._CustomerKey
		End Get
		Set
			If ((Me._CustomerKey = value)  _
						= false) Then
				If Me._Customer.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCustomerKeyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerKey = value
				Me.SendPropertyChanged("CustomerKey")
				Me.OnCustomerKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me.OnProductCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProductCode = value
				Me.SendPropertyChanged("ProductCode")
				Me.OnProductCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductDepartmentId", DbType:="NVarChar(50)")>  _
	Public Property ProductDepartmentId() As String
		Get
			Return Me._ProductDepartmentId
		End Get
		Set
			If (String.Equals(Me._ProductDepartmentId, value) = false) Then
				Me.OnProductDepartmentIdChanging(value)
				Me.SendPropertyChanging
				Me._ProductDepartmentId = value
				Me.SendPropertyChanged("ProductDepartmentId")
				Me.OnProductDepartmentIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductDate", DbType:="NVarChar(10)")>  _
	Public Property ProductDate() As String
		Get
			Return Me._ProductDate
		End Get
		Set
			If (String.Equals(Me._ProductDate, value) = false) Then
				Me.OnProductDateChanging(value)
				Me.SendPropertyChanging
				Me._ProductDate = value
				Me.SendPropertyChanged("ProductDate")
				Me.OnProductDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductDescription", DbType:="NVarChar(300)")>  _
	Public Property ProductDescription() As String
		Get
			Return Me._ProductDescription
		End Get
		Set
			If (String.Equals(Me._ProductDescription, value) = false) Then
				Me.OnProductDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._ProductDescription = value
				Me.SendPropertyChanged("ProductDescription")
				Me.OnProductDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageId", DbType:="NVarChar(50)")>  _
	Public Property LanguageId() As String
		Get
			Return Me._LanguageId
		End Get
		Set
			If (String.Equals(Me._LanguageId, value) = false) Then
				Me.OnLanguageIdChanging(value)
				Me.SendPropertyChanging
				Me._LanguageId = value
				Me.SendPropertyChanged("LanguageId")
				Me.OnLanguageIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemsPerBox", DbType:="Int")>  _
	Public Property ItemsPerBox() As System.Nullable(Of Integer)
		Get
			Return Me._ItemsPerBox
		End Get
		Set
			If (Me._ItemsPerBox.Equals(value) = false) Then
				Me.OnItemsPerBoxChanging(value)
				Me.SendPropertyChanging
				Me._ItemsPerBox = value
				Me.SendPropertyChanged("ItemsPerBox")
				Me.OnItemsPerBoxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MinimumStockLevel", DbType:="Int NOT NULL")>  _
	Public Property MinimumStockLevel() As Integer
		Get
			Return Me._MinimumStockLevel
		End Get
		Set
			If ((Me._MinimumStockLevel = value)  _
						= false) Then
				Me.OnMinimumStockLevelChanging(value)
				Me.SendPropertyChanging
				Me._MinimumStockLevel = value
				Me.SendPropertyChanged("MinimumStockLevel")
				Me.OnMinimumStockLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ArchiveFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property ArchiveFlag() As Char
		Get
			Return Me._ArchiveFlag
		End Get
		Set
			If ((Me._ArchiveFlag = value)  _
						= false) Then
				Me.OnArchiveFlagChanging(value)
				Me.SendPropertyChanging
				Me._ArchiveFlag = value
				Me.SendPropertyChanged("ArchiveFlag")
				Me.OnArchiveFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerialNumbersFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property SerialNumbersFlag() As Char
		Get
			Return Me._SerialNumbersFlag
		End Get
		Set
			If ((Me._SerialNumbersFlag = value)  _
						= false) Then
				Me.OnSerialNumbersFlagChanging(value)
				Me.SendPropertyChanging
				Me._SerialNumbersFlag = value
				Me.SendPropertyChanged("SerialNumbersFlag")
				Me.OnSerialNumbersFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeletedFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property DeletedFlag() As Char
		Get
			Return Me._DeletedFlag
		End Get
		Set
			If ((Me._DeletedFlag = value)  _
						= false) Then
				Me.OnDeletedFlagChanging(value)
				Me.SendPropertyChanging
				Me._DeletedFlag = value
				Me.SendPropertyChanged("DeletedFlag")
				Me.OnDeletedFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedByKey", DbType:="Int NOT NULL")>  _
	Public Property LastUpdatedByKey() As Integer
		Get
			Return Me._LastUpdatedByKey
		End Get
		Set
			If ((Me._LastUpdatedByKey = value)  _
						= false) Then
				Me.OnLastUpdatedByKeyChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedByKey = value
				Me.SendPropertyChanged("LastUpdatedByKey")
				Me.OnLastUpdatedByKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedOn", DbType:="SmallDateTime NOT NULL")>  _
	Public Property LastUpdatedOn() As Date
		Get
			Return Me._LastUpdatedOn
		End Get
		Set
			If ((Me._LastUpdatedOn = value)  _
						= false) Then
				Me.OnLastUpdatedOnChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedOn = value
				Me.SendPropertyChanged("LastUpdatedOn")
				Me.OnLastUpdatedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitValue", DbType:="Money NOT NULL")>  _
	Public Property UnitValue() As Decimal
		Get
			Return Me._UnitValue
		End Get
		Set
			If ((Me._UnitValue = value)  _
						= false) Then
				Me.OnUnitValueChanging(value)
				Me.SendPropertyChanging
				Me._UnitValue = value
				Me.SendPropertyChanged("UnitValue")
				Me.OnUnitValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitWeightGrams", DbType:="Int NOT NULL")>  _
	Public Property UnitWeightGrams() As Integer
		Get
			Return Me._UnitWeightGrams
		End Get
		Set
			If ((Me._UnitWeightGrams = value)  _
						= false) Then
				Me.OnUnitWeightGramsChanging(value)
				Me.SendPropertyChanging
				Me._UnitWeightGrams = value
				Me.SendPropertyChanged("UnitWeightGrams")
				Me.OnUnitWeightGramsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCategory", DbType:="NVarChar(50)")>  _
	Public Property ProductCategory() As String
		Get
			Return Me._ProductCategory
		End Get
		Set
			If (String.Equals(Me._ProductCategory, value) = false) Then
				Me.OnProductCategoryChanging(value)
				Me.SendPropertyChanging
				Me._ProductCategory = value
				Me.SendPropertyChanged("ProductCategory")
				Me.OnProductCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="SmallDateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategory", DbType:="NVarChar(50)")>  _
	Public Property SubCategory() As String
		Get
			Return Me._SubCategory
		End Get
		Set
			If (String.Equals(Me._SubCategory, value) = false) Then
				Me.OnSubCategoryChanging(value)
				Me.SendPropertyChanging
				Me._SubCategory = value
				Me.SendPropertyChanged("SubCategory")
				Me.OnSubCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockOwnedByKey", DbType:="Int")>  _
	Public Property StockOwnedByKey() As System.Nullable(Of Integer)
		Get
			Return Me._StockOwnedByKey
		End Get
		Set
			If (Me._StockOwnedByKey.Equals(value) = false) Then
				Me.OnStockOwnedByKeyChanging(value)
				Me.SendPropertyChanging
				Me._StockOwnedByKey = value
				Me.SendPropertyChanged("StockOwnedByKey")
				Me.OnStockOwnedByKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Misc1", DbType:="NVarChar(50)")>  _
	Public Property Misc1() As String
		Get
			Return Me._Misc1
		End Get
		Set
			If (String.Equals(Me._Misc1, value) = false) Then
				Me.OnMisc1Changing(value)
				Me.SendPropertyChanging
				Me._Misc1 = value
				Me.SendPropertyChanged("Misc1")
				Me.OnMisc1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Misc2", DbType:="NVarChar(50)")>  _
	Public Property Misc2() As String
		Get
			Return Me._Misc2
		End Get
		Set
			If (String.Equals(Me._Misc2, value) = false) Then
				Me.OnMisc2Changing(value)
				Me.SendPropertyChanging
				Me._Misc2 = value
				Me.SendPropertyChanged("Misc2")
				Me.OnMisc2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Notes", DbType:="NVarChar(1000)")>  _
	Public Property Notes() As String
		Get
			Return Me._Notes
		End Get
		Set
			If (String.Equals(Me._Notes, value) = false) Then
				Me.OnNotesChanging(value)
				Me.SendPropertyChanging
				Me._Notes = value
				Me.SendPropertyChanged("Notes")
				Me.OnNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReplenishmentDate", DbType:="SmallDateTime")>  _
	Public Property ReplenishmentDate() As System.Nullable(Of Date)
		Get
			Return Me._ReplenishmentDate
		End Get
		Set
			If (Me._ReplenishmentDate.Equals(value) = false) Then
				Me.OnReplenishmentDateChanging(value)
				Me.SendPropertyChanging
				Me._ReplenishmentDate = value
				Me.SendPropertyChanged("ReplenishmentDate")
				Me.OnReplenishmentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitValueCurrency", DbType:="Int")>  _
	Public Property UnitValueCurrency() As System.Nullable(Of Integer)
		Get
			Return Me._UnitValueCurrency
		End Get
		Set
			If (Me._UnitValueCurrency.Equals(value) = false) Then
				Me.OnUnitValueCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._UnitValueCurrency = value
				Me.SendPropertyChanged("UnitValueCurrency")
				Me.OnUnitValueCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbNailImage", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ThumbNailImage() As String
		Get
			Return Me._ThumbNailImage
		End Get
		Set
			If (String.Equals(Me._ThumbNailImage, value) = false) Then
				Me.OnThumbNailImageChanging(value)
				Me.SendPropertyChanging
				Me._ThumbNailImage = value
				Me.SendPropertyChanged("ThumbNailImage")
				Me.OnThumbNailImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebsiteAdRotatorFlag", DbType:="Bit NOT NULL")>  _
	Public Property WebsiteAdRotatorFlag() As Boolean
		Get
			Return Me._WebsiteAdRotatorFlag
		End Get
		Set
			If ((Me._WebsiteAdRotatorFlag = value)  _
						= false) Then
				Me.OnWebsiteAdRotatorFlagChanging(value)
				Me.SendPropertyChanging
				Me._WebsiteAdRotatorFlag = value
				Me.SendPropertyChanged("WebsiteAdRotatorFlag")
				Me.OnWebsiteAdRotatorFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OriginalImage", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property OriginalImage() As String
		Get
			Return Me._OriginalImage
		End Get
		Set
			If (String.Equals(Me._OriginalImage, value) = false) Then
				Me.OnOriginalImageChanging(value)
				Me.SendPropertyChanging
				Me._OriginalImage = value
				Me.SendPropertyChanged("OriginalImage")
				Me.OnOriginalImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDFFileName", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property PDFFileName() As String
		Get
			Return Me._PDFFileName
		End Get
		Set
			If (String.Equals(Me._PDFFileName, value) = false) Then
				Me.OnPDFFileNameChanging(value)
				Me.SendPropertyChanging
				Me._PDFFileName = value
				Me.SendPropertyChanged("PDFFileName")
				Me.OnPDFFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdRotatorText", DbType:="NVarChar(120)")>  _
	Public Property AdRotatorText() As String
		Get
			Return Me._AdRotatorText
		End Get
		Set
			If (String.Equals(Me._AdRotatorText, value) = false) Then
				Me.OnAdRotatorTextChanging(value)
				Me.SendPropertyChanging
				Me._AdRotatorText = value
				Me.SendPropertyChanged("AdRotatorText")
				Me.OnAdRotatorTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOn", DbType:="SmallDateTime NOT NULL")>  _
	Public Property CreatedOn() As Date
		Get
			Return Me._CreatedOn
		End Get
		Set
			If ((Me._CreatedOn = value)  _
						= false) Then
				Me.OnCreatedOnChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOn = value
				Me.SendPropertyChanged("CreatedOn")
				Me.OnCreatedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewOnWebForm", DbType:="Bit NOT NULL")>  _
	Public Property ViewOnWebForm() As Boolean
		Get
			Return Me._ViewOnWebForm
		End Get
		Set
			If ((Me._ViewOnWebForm = value)  _
						= false) Then
				Me.OnViewOnWebFormChanging(value)
				Me.SendPropertyChanging
				Me._ViewOnWebForm = value
				Me.SendPropertyChanged("ViewOnWebForm")
				Me.OnViewOnWebFormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequiresAuthentication", DbType:="Bit NOT NULL")>  _
	Public Property RequiresAuthentication() As Boolean
		Get
			Return Me._RequiresAuthentication
		End Get
		Set
			If ((Me._RequiresAuthentication = value)  _
						= false) Then
				Me.OnRequiresAuthenticationChanging(value)
				Me.SendPropertyChanging
				Me._RequiresAuthentication = value
				Me.SendPropertyChanged("RequiresAuthentication")
				Me.OnRequiresAuthenticationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RotationProductKey", DbType:="Int")>  _
	Public Property RotationProductKey() As System.Nullable(Of Integer)
		Get
			Return Me._RotationProductKey
		End Get
		Set
			If (Me._RotationProductKey.Equals(value) = false) Then
				Me.OnRotationProductKeyChanging(value)
				Me.SendPropertyChanging
				Me._RotationProductKey = value
				Me.SendPropertyChanged("RotationProductKey")
				Me.OnRotationProductKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategory2", DbType:="NVarChar(50)")>  _
	Public Property SubCategory2() As String
		Get
			Return Me._SubCategory2
		End Get
		Set
			If (String.Equals(Me._SubCategory2, value) = false) Then
				Me.OnSubCategory2Changing(value)
				Me.SendPropertyChanging
				Me._SubCategory2 = value
				Me.SendPropertyChanged("SubCategory2")
				Me.OnSubCategory2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductOwner1", DbType:="Int")>  _
	Public Property ProductOwner1() As System.Nullable(Of Integer)
		Get
			Return Me._ProductOwner1
		End Get
		Set
			If (Me._ProductOwner1.Equals(value) = false) Then
				Me.OnProductOwner1Changing(value)
				Me.SendPropertyChanging
				Me._ProductOwner1 = value
				Me.SendPropertyChanged("ProductOwner1")
				Me.OnProductOwner1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductOwner2", DbType:="Int")>  _
	Public Property ProductOwner2() As System.Nullable(Of Integer)
		Get
			Return Me._ProductOwner2
		End Get
		Set
			If (Me._ProductOwner2.Equals(value) = false) Then
				Me.OnProductOwner2Changing(value)
				Me.SendPropertyChanging
				Me._ProductOwner2 = value
				Me.SendPropertyChanged("ProductOwner2")
				Me.OnProductOwner2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="TinyInt")>  _
	Public Property Status() As System.Nullable(Of Byte)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitValue2", DbType:="Money")>  _
	Public Property UnitValue2() As System.Nullable(Of Decimal)
		Get
			Return Me._UnitValue2
		End Get
		Set
			If (Me._UnitValue2.Equals(value) = false) Then
				Me.OnUnitValue2Changing(value)
				Me.SendPropertyChanging
				Me._UnitValue2 = value
				Me.SendPropertyChanged("UnitValue2")
				Me.OnUnitValue2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Flag1", DbType:="Bit")>  _
	Public Property Flag1() As System.Nullable(Of Boolean)
		Get
			Return Me._Flag1
		End Get
		Set
			If (Me._Flag1.Equals(value) = false) Then
				Me.OnFlag1Changing(value)
				Me.SendPropertyChanging
				Me._Flag1 = value
				Me.SendPropertyChanged("Flag1")
				Me.OnFlag1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Flag2", DbType:="Bit")>  _
	Public Property Flag2() As System.Nullable(Of Boolean)
		Get
			Return Me._Flag2
		End Get
		Set
			If (Me._Flag2.Equals(value) = false) Then
				Me.OnFlag2Changing(value)
				Me.SendPropertyChanging
				Me._Flag2 = value
				Me.SendPropertyChanged("Flag2")
				Me.OnFlag2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactivityAlertDays", DbType:="Int")>  _
	Public Property InactivityAlertDays() As System.Nullable(Of Integer)
		Get
			Return Me._InactivityAlertDays
		End Get
		Set
			If (Me._InactivityAlertDays.Equals(value) = false) Then
				Me.OnInactivityAlertDaysChanging(value)
				Me.SendPropertyChanging
				Me._InactivityAlertDays = value
				Me.SendPropertyChanged("InactivityAlertDays")
				Me.OnInactivityAlertDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalendarManaged", DbType:="Bit")>  _
	Public Property CalendarManaged() As System.Nullable(Of Boolean)
		Get
			Return Me._CalendarManaged
		End Get
		Set
			If (Me._CalendarManaged.Equals(value) = false) Then
				Me.OnCalendarManagedChanging(value)
				Me.SendPropertyChanging
				Me._CalendarManaged = value
				Me.SendPropertyChanged("CalendarManaged")
				Me.OnCalendarManagedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnDemand", DbType:="Int")>  _
	Public Property OnDemand() As System.Nullable(Of Integer)
		Get
			Return Me._OnDemand
		End Get
		Set
			If (Me._OnDemand.Equals(value) = false) Then
				Me.OnOnDemandChanging(value)
				Me.SendPropertyChanging
				Me._OnDemand = value
				Me.SendPropertyChanged("OnDemand")
				Me.OnOnDemandChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnDemandPriceList", DbType:="Int")>  _
	Public Property OnDemandPriceList() As System.Nullable(Of Integer)
		Get
			Return Me._OnDemandPriceList
		End Get
		Set
			If (Me._OnDemandPriceList.Equals(value) = false) Then
				Me.OnOnDemandPriceListChanging(value)
				Me.SendPropertyChanging
				Me._OnDemandPriceList = value
				Me.SendPropertyChanged("OnDemandPriceList")
				Me.OnOnDemandPriceListChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZeroStockNotification", DbType:="TinyInt")>  _
	Public Property ZeroStockNotification() As System.Nullable(Of Byte)
		Get
			Return Me._ZeroStockNotification
		End Get
		Set
			If (Me._ZeroStockNotification.Equals(value) = false) Then
				Me.OnZeroStockNotificationChanging(value)
				Me.SendPropertyChanging
				Me._ZeroStockNotification = value
				Me.SendPropertyChanged("ZeroStockNotification")
				Me.OnZeroStockNotificationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomLetter", DbType:="Bit")>  _
	Public Property CustomLetter() As System.Nullable(Of Boolean)
		Get
			Return Me._CustomLetter
		End Get
		Set
			If (Me._CustomLetter.Equals(value) = false) Then
				Me.OnCustomLetterChanging(value)
				Me.SendPropertyChanging
				Me._CustomLetter = value
				Me.SendPropertyChanged("CustomLetter")
				Me.OnCustomLetterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="LogisticProduct_LogisticProductLocation", Storage:="_LogisticProductLocations", ThisKey:="LogisticProductKey", OtherKey:="LogisticProductKey")>  _
	Public Property LogisticProductLocations() As EntitySet(Of LogisticProductLocation)
		Get
			Return Me._LogisticProductLocations
		End Get
		Set
			Me._LogisticProductLocations.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Customer_LogisticProduct", Storage:="_Customer", ThisKey:="CustomerKey", OtherKey:="CustomerKey", IsForeignKey:=true)>  _
	Public Property Customer() As Customer
		Get
			Return Me._Customer.Entity
		End Get
		Set
			Dim previousValue As Customer = Me._Customer.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Customer.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Customer.Entity = Nothing
					previousValue.LogisticProducts.Remove(Me)
				End If
				Me._Customer.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.LogisticProducts.Add(Me)
					Me._CustomerKey = value.CustomerKey
				Else
					Me._CustomerKey = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Customer")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_LogisticProductLocations(ByVal entity As LogisticProductLocation)
		Me.SendPropertyChanging
		entity.LogisticProduct = Me
	End Sub
	
	Private Sub detach_LogisticProductLocations(ByVal entity As LogisticProductLocation)
		Me.SendPropertyChanging
		entity.LogisticProduct = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LogisticProductLocation")>  _
Partial Public Class LogisticProductLocation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LogisticProductLocationKey As Integer
	
	Private _LogisticProductKey As Integer
	
	Private _WarehouseBayKey As Integer
	
	Private _LogisticProductQuantity As Integer
	
	Private _LogisticProductLocationNote As String
	
	Private _DateStored As Date
	
	Private _LogisticProduct As EntityRef(Of LogisticProduct)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLogisticProductLocationKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLogisticProductLocationKeyChanged()
    End Sub
    Partial Private Sub OnLogisticProductKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLogisticProductKeyChanged()
    End Sub
    Partial Private Sub OnWarehouseBayKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnWarehouseBayKeyChanged()
    End Sub
    Partial Private Sub OnLogisticProductQuantityChanging(value As Integer)
    End Sub
    Partial Private Sub OnLogisticProductQuantityChanged()
    End Sub
    Partial Private Sub OnLogisticProductLocationNoteChanging(value As String)
    End Sub
    Partial Private Sub OnLogisticProductLocationNoteChanged()
    End Sub
    Partial Private Sub OnDateStoredChanging(value As Date)
    End Sub
    Partial Private Sub OnDateStoredChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._LogisticProduct = CType(Nothing, EntityRef(Of LogisticProduct))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogisticProductLocationKey", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LogisticProductLocationKey() As Integer
		Get
			Return Me._LogisticProductLocationKey
		End Get
		Set
			If ((Me._LogisticProductLocationKey = value)  _
						= false) Then
				Me.OnLogisticProductLocationKeyChanging(value)
				Me.SendPropertyChanging
				Me._LogisticProductLocationKey = value
				Me.SendPropertyChanged("LogisticProductLocationKey")
				Me.OnLogisticProductLocationKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogisticProductKey", DbType:="Int NOT NULL")>  _
	Public Property LogisticProductKey() As Integer
		Get
			Return Me._LogisticProductKey
		End Get
		Set
			If ((Me._LogisticProductKey = value)  _
						= false) Then
				If Me._LogisticProduct.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnLogisticProductKeyChanging(value)
				Me.SendPropertyChanging
				Me._LogisticProductKey = value
				Me.SendPropertyChanged("LogisticProductKey")
				Me.OnLogisticProductKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WarehouseBayKey", DbType:="Int NOT NULL")>  _
	Public Property WarehouseBayKey() As Integer
		Get
			Return Me._WarehouseBayKey
		End Get
		Set
			If ((Me._WarehouseBayKey = value)  _
						= false) Then
				Me.OnWarehouseBayKeyChanging(value)
				Me.SendPropertyChanging
				Me._WarehouseBayKey = value
				Me.SendPropertyChanged("WarehouseBayKey")
				Me.OnWarehouseBayKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogisticProductQuantity", DbType:="Int NOT NULL")>  _
	Public Property LogisticProductQuantity() As Integer
		Get
			Return Me._LogisticProductQuantity
		End Get
		Set
			If ((Me._LogisticProductQuantity = value)  _
						= false) Then
				Me.OnLogisticProductQuantityChanging(value)
				Me.SendPropertyChanging
				Me._LogisticProductQuantity = value
				Me.SendPropertyChanged("LogisticProductQuantity")
				Me.OnLogisticProductQuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogisticProductLocationNote", DbType:="NVarChar(1000)")>  _
	Public Property LogisticProductLocationNote() As String
		Get
			Return Me._LogisticProductLocationNote
		End Get
		Set
			If (String.Equals(Me._LogisticProductLocationNote, value) = false) Then
				Me.OnLogisticProductLocationNoteChanging(value)
				Me.SendPropertyChanging
				Me._LogisticProductLocationNote = value
				Me.SendPropertyChanged("LogisticProductLocationNote")
				Me.OnLogisticProductLocationNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateStored", DbType:="SmallDateTime NOT NULL")>  _
	Public Property DateStored() As Date
		Get
			Return Me._DateStored
		End Get
		Set
			If ((Me._DateStored = value)  _
						= false) Then
				Me.OnDateStoredChanging(value)
				Me.SendPropertyChanging
				Me._DateStored = value
				Me.SendPropertyChanged("DateStored")
				Me.OnDateStoredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="LogisticProduct_LogisticProductLocation", Storage:="_LogisticProduct", ThisKey:="LogisticProductKey", OtherKey:="LogisticProductKey", IsForeignKey:=true)>  _
	Public Property LogisticProduct() As LogisticProduct
		Get
			Return Me._LogisticProduct.Entity
		End Get
		Set
			Dim previousValue As LogisticProduct = Me._LogisticProduct.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._LogisticProduct.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._LogisticProduct.Entity = Nothing
					previousValue.LogisticProductLocations.Remove(Me)
				End If
				Me._LogisticProduct.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.LogisticProductLocations.Add(Me)
					Me._LogisticProductKey = value.LogisticProductKey
				Else
					Me._LogisticProductKey = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("LogisticProduct")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Customer")>  _
Partial Public Class Customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerKey As Integer
	
	Private _GroupsKey As System.Nullable(Of Integer)
	
	Private _CustomerAccountCode As String
	
	Private _CustomerAccountTypeId As String
	
	Private _CustomerCategoryId As String
	
	Private _CustomerStatusId As String
	
	Private _CustomerSalesRepKey As System.Nullable(Of Integer)
	
	Private _CustomerName As String
	
	Private _CustomerAddr1 As String
	
	Private _CustomerAddr2 As String
	
	Private _CustomerAddr3 As String
	
	Private _CustomerAddr4 As String
	
	Private _CustomerTown As String
	
	Private _CustomerCounty As String
	
	Private _CustomerPostCode As String
	
	Private _CustomerCountryKey As Integer
	
	Private _SeparateBillingAddressFlag As Char
	
	Private _BillingName As String
	
	Private _BillingAddr1 As String
	
	Private _BillingAddr2 As String
	
	Private _BillingAddr3 As String
	
	Private _BillingAddr4 As String
	
	Private _BillingTown As String
	
	Private _BillingCounty As String
	
	Private _BillingPostCode As String
	
	Private _BillingCountry As System.Nullable(Of Integer)
	
	Private _BillingAttentionOf As String
	
	Private _TariffKey As System.Nullable(Of Integer)
	
	Private _ChargeForStorageFlag As System.Nullable(Of Char)
	
	Private _RateForWeeklyStorage As System.Nullable(Of Decimal)
	
	Private _DiscountOnItemsFlag As System.Nullable(Of Char)
	
	Private _DiscountOnItemsThreshold As System.Nullable(Of Integer)
	
	Private _DiscountOnItemsReduction As System.Nullable(Of Decimal)
	
	Private _DiscountOnValueFlag As System.Nullable(Of Char)
	
	Private _DiscountOnValueThreshold As System.Nullable(Of Decimal)
	
	Private _DiscountOnValuePercentage As System.Nullable(Of Byte)
	
	Private _NoDaysCredit As Byte
	
	Private _BillingCurrencyKey As Integer
	
	Private _CustomerCreditLimit As Decimal
	
	Private _CurrentCarrierId As String
	
	Private _EmailPODsFlag As System.Nullable(Of Char)
	
	Private _PODsEmailAddress As String
	
	Private _FaxPODsFlag As System.Nullable(Of Char)
	
	Private _PODsFaxNumber As String
	
	Private _PostPODsToWebServerFlag As System.Nullable(Of Char)
	
	Private _EmailLogMovementFlag As System.Nullable(Of Char)
	
	Private _LogMovementEmailAddress As String
	
	Private _CustomerCreatedOn As Date
	
	Private _CustomerCreatedByKey As Integer
	
	Private _FirstJobOn As System.Nullable(Of Date)
	
	Private _LastJobOn As System.Nullable(Of Date)
	
	Private _DeletedFlag As Char
	
	Private _LastUpdatedByKey As Integer
	
	Private _LastUpdatedOn As Date
	
	Private _DefaultCommodity As String
	
	Private _DefaultCurrencyKey As Integer
	
	Private _URL As String
	
	Private _NumberOfPlainPaperConNotes As Integer
	
	Private _ExpiryDateReportInclusion As System.Nullable(Of Boolean)
	
	Private _DefaultContact As String
	
	Private _DefaultTelephone As String
	
	Private _DefaultEmail As String
	
	Private _DefaultFax As String
	
	Private _AccountHandlerKey As System.Nullable(Of Integer)
	
	Private _ExplicitProductPermissions As System.Nullable(Of Boolean)
	
	Private _DefaultUnitOfWeightKey As System.Nullable(Of Integer)
	
	Private _DefaultServiceLevelKey As System.Nullable(Of Integer)
	
	Private _EmailPlainTextOnly As System.Nullable(Of Boolean)
	
	Private _UsesCategories As System.Nullable(Of Boolean)
	
	Private _WarehouseId As System.Nullable(Of Integer)
	
	Private _AccessPolicy As System.Nullable(Of Integer)
	
	Private _DefaultInactivityAlertDays As System.Nullable(Of Integer)
	
	Private _EORI As String
	
	Private _LogisticProducts As EntitySet(Of LogisticProduct)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerKeyChanged()
    End Sub
    Partial Private Sub OnGroupsKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGroupsKeyChanged()
    End Sub
    Partial Private Sub OnCustomerAccountCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerAccountCodeChanged()
    End Sub
    Partial Private Sub OnCustomerAccountTypeIdChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerAccountTypeIdChanged()
    End Sub
    Partial Private Sub OnCustomerCategoryIdChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerCategoryIdChanged()
    End Sub
    Partial Private Sub OnCustomerStatusIdChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerStatusIdChanged()
    End Sub
    Partial Private Sub OnCustomerSalesRepKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustomerSalesRepKeyChanged()
    End Sub
    Partial Private Sub OnCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerNameChanged()
    End Sub
    Partial Private Sub OnCustomerAddr1Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddr1Changed()
    End Sub
    Partial Private Sub OnCustomerAddr2Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddr2Changed()
    End Sub
    Partial Private Sub OnCustomerAddr3Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddr3Changed()
    End Sub
    Partial Private Sub OnCustomerAddr4Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddr4Changed()
    End Sub
    Partial Private Sub OnCustomerTownChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerTownChanged()
    End Sub
    Partial Private Sub OnCustomerCountyChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerCountyChanged()
    End Sub
    Partial Private Sub OnCustomerPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerPostCodeChanged()
    End Sub
    Partial Private Sub OnCustomerCountryKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerCountryKeyChanged()
    End Sub
    Partial Private Sub OnSeparateBillingAddressFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnSeparateBillingAddressFlagChanged()
    End Sub
    Partial Private Sub OnBillingNameChanging(value As String)
    End Sub
    Partial Private Sub OnBillingNameChanged()
    End Sub
    Partial Private Sub OnBillingAddr1Changing(value As String)
    End Sub
    Partial Private Sub OnBillingAddr1Changed()
    End Sub
    Partial Private Sub OnBillingAddr2Changing(value As String)
    End Sub
    Partial Private Sub OnBillingAddr2Changed()
    End Sub
    Partial Private Sub OnBillingAddr3Changing(value As String)
    End Sub
    Partial Private Sub OnBillingAddr3Changed()
    End Sub
    Partial Private Sub OnBillingAddr4Changing(value As String)
    End Sub
    Partial Private Sub OnBillingAddr4Changed()
    End Sub
    Partial Private Sub OnBillingTownChanging(value As String)
    End Sub
    Partial Private Sub OnBillingTownChanged()
    End Sub
    Partial Private Sub OnBillingCountyChanging(value As String)
    End Sub
    Partial Private Sub OnBillingCountyChanged()
    End Sub
    Partial Private Sub OnBillingPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBillingPostCodeChanged()
    End Sub
    Partial Private Sub OnBillingCountryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingCountryChanged()
    End Sub
    Partial Private Sub OnBillingAttentionOfChanging(value As String)
    End Sub
    Partial Private Sub OnBillingAttentionOfChanged()
    End Sub
    Partial Private Sub OnTariffKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTariffKeyChanged()
    End Sub
    Partial Private Sub OnChargeForStorageFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnChargeForStorageFlagChanged()
    End Sub
    Partial Private Sub OnRateForWeeklyStorageChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRateForWeeklyStorageChanged()
    End Sub
    Partial Private Sub OnDiscountOnItemsFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnDiscountOnItemsFlagChanged()
    End Sub
    Partial Private Sub OnDiscountOnItemsThresholdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDiscountOnItemsThresholdChanged()
    End Sub
    Partial Private Sub OnDiscountOnItemsReductionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountOnItemsReductionChanged()
    End Sub
    Partial Private Sub OnDiscountOnValueFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnDiscountOnValueFlagChanged()
    End Sub
    Partial Private Sub OnDiscountOnValueThresholdChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountOnValueThresholdChanged()
    End Sub
    Partial Private Sub OnDiscountOnValuePercentageChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDiscountOnValuePercentageChanged()
    End Sub
    Partial Private Sub OnNoDaysCreditChanging(value As Byte)
    End Sub
    Partial Private Sub OnNoDaysCreditChanged()
    End Sub
    Partial Private Sub OnBillingCurrencyKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnBillingCurrencyKeyChanged()
    End Sub
    Partial Private Sub OnCustomerCreditLimitChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCustomerCreditLimitChanged()
    End Sub
    Partial Private Sub OnCurrentCarrierIdChanging(value As String)
    End Sub
    Partial Private Sub OnCurrentCarrierIdChanged()
    End Sub
    Partial Private Sub OnEmailPODsFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEmailPODsFlagChanged()
    End Sub
    Partial Private Sub OnPODsEmailAddressChanging(value As String)
    End Sub
    Partial Private Sub OnPODsEmailAddressChanged()
    End Sub
    Partial Private Sub OnFaxPODsFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFaxPODsFlagChanged()
    End Sub
    Partial Private Sub OnPODsFaxNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPODsFaxNumberChanged()
    End Sub
    Partial Private Sub OnPostPODsToWebServerFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnPostPODsToWebServerFlagChanged()
    End Sub
    Partial Private Sub OnEmailLogMovementFlagChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEmailLogMovementFlagChanged()
    End Sub
    Partial Private Sub OnLogMovementEmailAddressChanging(value As String)
    End Sub
    Partial Private Sub OnLogMovementEmailAddressChanged()
    End Sub
    Partial Private Sub OnCustomerCreatedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnCustomerCreatedOnChanged()
    End Sub
    Partial Private Sub OnCustomerCreatedByKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerCreatedByKeyChanged()
    End Sub
    Partial Private Sub OnFirstJobOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFirstJobOnChanged()
    End Sub
    Partial Private Sub OnLastJobOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastJobOnChanged()
    End Sub
    Partial Private Sub OnDeletedFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnDeletedFlagChanged()
    End Sub
    Partial Private Sub OnLastUpdatedByKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLastUpdatedByKeyChanged()
    End Sub
    Partial Private Sub OnLastUpdatedOnChanging(value As Date)
    End Sub
    Partial Private Sub OnLastUpdatedOnChanged()
    End Sub
    Partial Private Sub OnDefaultCommodityChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultCommodityChanged()
    End Sub
    Partial Private Sub OnDefaultCurrencyKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnDefaultCurrencyKeyChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnNumberOfPlainPaperConNotesChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberOfPlainPaperConNotesChanged()
    End Sub
    Partial Private Sub OnExpiryDateReportInclusionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExpiryDateReportInclusionChanged()
    End Sub
    Partial Private Sub OnDefaultContactChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultContactChanged()
    End Sub
    Partial Private Sub OnDefaultTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultTelephoneChanged()
    End Sub
    Partial Private Sub OnDefaultEmailChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultEmailChanged()
    End Sub
    Partial Private Sub OnDefaultFaxChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultFaxChanged()
    End Sub
    Partial Private Sub OnAccountHandlerKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAccountHandlerKeyChanged()
    End Sub
    Partial Private Sub OnExplicitProductPermissionsChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExplicitProductPermissionsChanged()
    End Sub
    Partial Private Sub OnDefaultUnitOfWeightKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDefaultUnitOfWeightKeyChanged()
    End Sub
    Partial Private Sub OnDefaultServiceLevelKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDefaultServiceLevelKeyChanged()
    End Sub
    Partial Private Sub OnEmailPlainTextOnlyChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEmailPlainTextOnlyChanged()
    End Sub
    Partial Private Sub OnUsesCategoriesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsesCategoriesChanged()
    End Sub
    Partial Private Sub OnWarehouseIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWarehouseIdChanged()
    End Sub
    Partial Private Sub OnAccessPolicyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAccessPolicyChanged()
    End Sub
    Partial Private Sub OnDefaultInactivityAlertDaysChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDefaultInactivityAlertDaysChanged()
    End Sub
    Partial Private Sub OnEORIChanging(value As String)
    End Sub
    Partial Private Sub OnEORIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._LogisticProducts = New EntitySet(Of LogisticProduct)(AddressOf Me.attach_LogisticProducts, AddressOf Me.detach_LogisticProducts)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerKey", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CustomerKey() As Integer
		Get
			Return Me._CustomerKey
		End Get
		Set
			If ((Me._CustomerKey = value)  _
						= false) Then
				Me.OnCustomerKeyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerKey = value
				Me.SendPropertyChanged("CustomerKey")
				Me.OnCustomerKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupsKey", DbType:="Int")>  _
	Public Property GroupsKey() As System.Nullable(Of Integer)
		Get
			Return Me._GroupsKey
		End Get
		Set
			If (Me._GroupsKey.Equals(value) = false) Then
				Me.OnGroupsKeyChanging(value)
				Me.SendPropertyChanging
				Me._GroupsKey = value
				Me.SendPropertyChanged("GroupsKey")
				Me.OnGroupsKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAccountCode", DbType:="NVarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerAccountCode() As String
		Get
			Return Me._CustomerAccountCode
		End Get
		Set
			If (String.Equals(Me._CustomerAccountCode, value) = false) Then
				Me.OnCustomerAccountCodeChanging(value)
				Me.SendPropertyChanging
				Me._CustomerAccountCode = value
				Me.SendPropertyChanged("CustomerAccountCode")
				Me.OnCustomerAccountCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAccountTypeId", DbType:="NVarChar(20)")>  _
	Public Property CustomerAccountTypeId() As String
		Get
			Return Me._CustomerAccountTypeId
		End Get
		Set
			If (String.Equals(Me._CustomerAccountTypeId, value) = false) Then
				Me.OnCustomerAccountTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._CustomerAccountTypeId = value
				Me.SendPropertyChanged("CustomerAccountTypeId")
				Me.OnCustomerAccountTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCategoryId", DbType:="NVarChar(20)")>  _
	Public Property CustomerCategoryId() As String
		Get
			Return Me._CustomerCategoryId
		End Get
		Set
			If (String.Equals(Me._CustomerCategoryId, value) = false) Then
				Me.OnCustomerCategoryIdChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCategoryId = value
				Me.SendPropertyChanged("CustomerCategoryId")
				Me.OnCustomerCategoryIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerStatusId", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerStatusId() As String
		Get
			Return Me._CustomerStatusId
		End Get
		Set
			If (String.Equals(Me._CustomerStatusId, value) = false) Then
				Me.OnCustomerStatusIdChanging(value)
				Me.SendPropertyChanging
				Me._CustomerStatusId = value
				Me.SendPropertyChanged("CustomerStatusId")
				Me.OnCustomerStatusIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerSalesRepKey", DbType:="Int")>  _
	Public Property CustomerSalesRepKey() As System.Nullable(Of Integer)
		Get
			Return Me._CustomerSalesRepKey
		End Get
		Set
			If (Me._CustomerSalesRepKey.Equals(value) = false) Then
				Me.OnCustomerSalesRepKeyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerSalesRepKey = value
				Me.SendPropertyChanged("CustomerSalesRepKey")
				Me.OnCustomerSalesRepKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerName() As String
		Get
			Return Me._CustomerName
		End Get
		Set
			If (String.Equals(Me._CustomerName, value) = false) Then
				Me.OnCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._CustomerName = value
				Me.SendPropertyChanged("CustomerName")
				Me.OnCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddr1", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerAddr1() As String
		Get
			Return Me._CustomerAddr1
		End Get
		Set
			If (String.Equals(Me._CustomerAddr1, value) = false) Then
				Me.OnCustomerAddr1Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddr1 = value
				Me.SendPropertyChanged("CustomerAddr1")
				Me.OnCustomerAddr1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddr2", DbType:="NVarChar(50)")>  _
	Public Property CustomerAddr2() As String
		Get
			Return Me._CustomerAddr2
		End Get
		Set
			If (String.Equals(Me._CustomerAddr2, value) = false) Then
				Me.OnCustomerAddr2Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddr2 = value
				Me.SendPropertyChanged("CustomerAddr2")
				Me.OnCustomerAddr2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddr3", DbType:="NVarChar(50)")>  _
	Public Property CustomerAddr3() As String
		Get
			Return Me._CustomerAddr3
		End Get
		Set
			If (String.Equals(Me._CustomerAddr3, value) = false) Then
				Me.OnCustomerAddr3Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddr3 = value
				Me.SendPropertyChanged("CustomerAddr3")
				Me.OnCustomerAddr3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddr4", DbType:="NVarChar(50)")>  _
	Public Property CustomerAddr4() As String
		Get
			Return Me._CustomerAddr4
		End Get
		Set
			If (String.Equals(Me._CustomerAddr4, value) = false) Then
				Me.OnCustomerAddr4Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddr4 = value
				Me.SendPropertyChanged("CustomerAddr4")
				Me.OnCustomerAddr4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerTown", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CustomerTown() As String
		Get
			Return Me._CustomerTown
		End Get
		Set
			If (String.Equals(Me._CustomerTown, value) = false) Then
				Me.OnCustomerTownChanging(value)
				Me.SendPropertyChanging
				Me._CustomerTown = value
				Me.SendPropertyChanged("CustomerTown")
				Me.OnCustomerTownChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCounty", DbType:="NVarChar(50)")>  _
	Public Property CustomerCounty() As String
		Get
			Return Me._CustomerCounty
		End Get
		Set
			If (String.Equals(Me._CustomerCounty, value) = false) Then
				Me.OnCustomerCountyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCounty = value
				Me.SendPropertyChanged("CustomerCounty")
				Me.OnCustomerCountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerPostCode", DbType:="NVarChar(50)")>  _
	Public Property CustomerPostCode() As String
		Get
			Return Me._CustomerPostCode
		End Get
		Set
			If (String.Equals(Me._CustomerPostCode, value) = false) Then
				Me.OnCustomerPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._CustomerPostCode = value
				Me.SendPropertyChanged("CustomerPostCode")
				Me.OnCustomerPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCountryKey", DbType:="Int NOT NULL")>  _
	Public Property CustomerCountryKey() As Integer
		Get
			Return Me._CustomerCountryKey
		End Get
		Set
			If ((Me._CustomerCountryKey = value)  _
						= false) Then
				Me.OnCustomerCountryKeyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCountryKey = value
				Me.SendPropertyChanged("CustomerCountryKey")
				Me.OnCustomerCountryKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeparateBillingAddressFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property SeparateBillingAddressFlag() As Char
		Get
			Return Me._SeparateBillingAddressFlag
		End Get
		Set
			If ((Me._SeparateBillingAddressFlag = value)  _
						= false) Then
				Me.OnSeparateBillingAddressFlagChanging(value)
				Me.SendPropertyChanging
				Me._SeparateBillingAddressFlag = value
				Me.SendPropertyChanged("SeparateBillingAddressFlag")
				Me.OnSeparateBillingAddressFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingName", DbType:="NVarChar(50)")>  _
	Public Property BillingName() As String
		Get
			Return Me._BillingName
		End Get
		Set
			If (String.Equals(Me._BillingName, value) = false) Then
				Me.OnBillingNameChanging(value)
				Me.SendPropertyChanging
				Me._BillingName = value
				Me.SendPropertyChanged("BillingName")
				Me.OnBillingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddr1", DbType:="NVarChar(50)")>  _
	Public Property BillingAddr1() As String
		Get
			Return Me._BillingAddr1
		End Get
		Set
			If (String.Equals(Me._BillingAddr1, value) = false) Then
				Me.OnBillingAddr1Changing(value)
				Me.SendPropertyChanging
				Me._BillingAddr1 = value
				Me.SendPropertyChanged("BillingAddr1")
				Me.OnBillingAddr1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddr2", DbType:="NVarChar(50)")>  _
	Public Property BillingAddr2() As String
		Get
			Return Me._BillingAddr2
		End Get
		Set
			If (String.Equals(Me._BillingAddr2, value) = false) Then
				Me.OnBillingAddr2Changing(value)
				Me.SendPropertyChanging
				Me._BillingAddr2 = value
				Me.SendPropertyChanged("BillingAddr2")
				Me.OnBillingAddr2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddr3", DbType:="NVarChar(50)")>  _
	Public Property BillingAddr3() As String
		Get
			Return Me._BillingAddr3
		End Get
		Set
			If (String.Equals(Me._BillingAddr3, value) = false) Then
				Me.OnBillingAddr3Changing(value)
				Me.SendPropertyChanging
				Me._BillingAddr3 = value
				Me.SendPropertyChanged("BillingAddr3")
				Me.OnBillingAddr3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddr4", DbType:="NVarChar(50)")>  _
	Public Property BillingAddr4() As String
		Get
			Return Me._BillingAddr4
		End Get
		Set
			If (String.Equals(Me._BillingAddr4, value) = false) Then
				Me.OnBillingAddr4Changing(value)
				Me.SendPropertyChanging
				Me._BillingAddr4 = value
				Me.SendPropertyChanged("BillingAddr4")
				Me.OnBillingAddr4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingTown", DbType:="NVarChar(50)")>  _
	Public Property BillingTown() As String
		Get
			Return Me._BillingTown
		End Get
		Set
			If (String.Equals(Me._BillingTown, value) = false) Then
				Me.OnBillingTownChanging(value)
				Me.SendPropertyChanging
				Me._BillingTown = value
				Me.SendPropertyChanged("BillingTown")
				Me.OnBillingTownChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingCounty", DbType:="NVarChar(50)")>  _
	Public Property BillingCounty() As String
		Get
			Return Me._BillingCounty
		End Get
		Set
			If (String.Equals(Me._BillingCounty, value) = false) Then
				Me.OnBillingCountyChanging(value)
				Me.SendPropertyChanging
				Me._BillingCounty = value
				Me.SendPropertyChanged("BillingCounty")
				Me.OnBillingCountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingPostCode", DbType:="NVarChar(50)")>  _
	Public Property BillingPostCode() As String
		Get
			Return Me._BillingPostCode
		End Get
		Set
			If (String.Equals(Me._BillingPostCode, value) = false) Then
				Me.OnBillingPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._BillingPostCode = value
				Me.SendPropertyChanged("BillingPostCode")
				Me.OnBillingPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingCountry", DbType:="Int")>  _
	Public Property BillingCountry() As System.Nullable(Of Integer)
		Get
			Return Me._BillingCountry
		End Get
		Set
			If (Me._BillingCountry.Equals(value) = false) Then
				Me.OnBillingCountryChanging(value)
				Me.SendPropertyChanging
				Me._BillingCountry = value
				Me.SendPropertyChanged("BillingCountry")
				Me.OnBillingCountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAttentionOf", DbType:="NVarChar(50)")>  _
	Public Property BillingAttentionOf() As String
		Get
			Return Me._BillingAttentionOf
		End Get
		Set
			If (String.Equals(Me._BillingAttentionOf, value) = false) Then
				Me.OnBillingAttentionOfChanging(value)
				Me.SendPropertyChanging
				Me._BillingAttentionOf = value
				Me.SendPropertyChanged("BillingAttentionOf")
				Me.OnBillingAttentionOfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TariffKey", DbType:="Int")>  _
	Public Property TariffKey() As System.Nullable(Of Integer)
		Get
			Return Me._TariffKey
		End Get
		Set
			If (Me._TariffKey.Equals(value) = false) Then
				Me.OnTariffKeyChanging(value)
				Me.SendPropertyChanging
				Me._TariffKey = value
				Me.SendPropertyChanged("TariffKey")
				Me.OnTariffKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChargeForStorageFlag", DbType:="Char(1)")>  _
	Public Property ChargeForStorageFlag() As System.Nullable(Of Char)
		Get
			Return Me._ChargeForStorageFlag
		End Get
		Set
			If (Me._ChargeForStorageFlag.Equals(value) = false) Then
				Me.OnChargeForStorageFlagChanging(value)
				Me.SendPropertyChanging
				Me._ChargeForStorageFlag = value
				Me.SendPropertyChanged("ChargeForStorageFlag")
				Me.OnChargeForStorageFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RateForWeeklyStorage", DbType:="Money")>  _
	Public Property RateForWeeklyStorage() As System.Nullable(Of Decimal)
		Get
			Return Me._RateForWeeklyStorage
		End Get
		Set
			If (Me._RateForWeeklyStorage.Equals(value) = false) Then
				Me.OnRateForWeeklyStorageChanging(value)
				Me.SendPropertyChanging
				Me._RateForWeeklyStorage = value
				Me.SendPropertyChanged("RateForWeeklyStorage")
				Me.OnRateForWeeklyStorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnItemsFlag", DbType:="Char(1)")>  _
	Public Property DiscountOnItemsFlag() As System.Nullable(Of Char)
		Get
			Return Me._DiscountOnItemsFlag
		End Get
		Set
			If (Me._DiscountOnItemsFlag.Equals(value) = false) Then
				Me.OnDiscountOnItemsFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnItemsFlag = value
				Me.SendPropertyChanged("DiscountOnItemsFlag")
				Me.OnDiscountOnItemsFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnItemsThreshold", DbType:="Int")>  _
	Public Property DiscountOnItemsThreshold() As System.Nullable(Of Integer)
		Get
			Return Me._DiscountOnItemsThreshold
		End Get
		Set
			If (Me._DiscountOnItemsThreshold.Equals(value) = false) Then
				Me.OnDiscountOnItemsThresholdChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnItemsThreshold = value
				Me.SendPropertyChanged("DiscountOnItemsThreshold")
				Me.OnDiscountOnItemsThresholdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnItemsReduction", DbType:="Money")>  _
	Public Property DiscountOnItemsReduction() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountOnItemsReduction
		End Get
		Set
			If (Me._DiscountOnItemsReduction.Equals(value) = false) Then
				Me.OnDiscountOnItemsReductionChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnItemsReduction = value
				Me.SendPropertyChanged("DiscountOnItemsReduction")
				Me.OnDiscountOnItemsReductionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnValueFlag", DbType:="Char(1)")>  _
	Public Property DiscountOnValueFlag() As System.Nullable(Of Char)
		Get
			Return Me._DiscountOnValueFlag
		End Get
		Set
			If (Me._DiscountOnValueFlag.Equals(value) = false) Then
				Me.OnDiscountOnValueFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnValueFlag = value
				Me.SendPropertyChanged("DiscountOnValueFlag")
				Me.OnDiscountOnValueFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnValueThreshold", DbType:="Money")>  _
	Public Property DiscountOnValueThreshold() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountOnValueThreshold
		End Get
		Set
			If (Me._DiscountOnValueThreshold.Equals(value) = false) Then
				Me.OnDiscountOnValueThresholdChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnValueThreshold = value
				Me.SendPropertyChanged("DiscountOnValueThreshold")
				Me.OnDiscountOnValueThresholdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOnValuePercentage", DbType:="TinyInt")>  _
	Public Property DiscountOnValuePercentage() As System.Nullable(Of Byte)
		Get
			Return Me._DiscountOnValuePercentage
		End Get
		Set
			If (Me._DiscountOnValuePercentage.Equals(value) = false) Then
				Me.OnDiscountOnValuePercentageChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOnValuePercentage = value
				Me.SendPropertyChanged("DiscountOnValuePercentage")
				Me.OnDiscountOnValuePercentageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoDaysCredit", DbType:="TinyInt NOT NULL")>  _
	Public Property NoDaysCredit() As Byte
		Get
			Return Me._NoDaysCredit
		End Get
		Set
			If ((Me._NoDaysCredit = value)  _
						= false) Then
				Me.OnNoDaysCreditChanging(value)
				Me.SendPropertyChanging
				Me._NoDaysCredit = value
				Me.SendPropertyChanged("NoDaysCredit")
				Me.OnNoDaysCreditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingCurrencyKey", DbType:="Int NOT NULL")>  _
	Public Property BillingCurrencyKey() As Integer
		Get
			Return Me._BillingCurrencyKey
		End Get
		Set
			If ((Me._BillingCurrencyKey = value)  _
						= false) Then
				Me.OnBillingCurrencyKeyChanging(value)
				Me.SendPropertyChanging
				Me._BillingCurrencyKey = value
				Me.SendPropertyChanged("BillingCurrencyKey")
				Me.OnBillingCurrencyKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCreditLimit", DbType:="Money NOT NULL")>  _
	Public Property CustomerCreditLimit() As Decimal
		Get
			Return Me._CustomerCreditLimit
		End Get
		Set
			If ((Me._CustomerCreditLimit = value)  _
						= false) Then
				Me.OnCustomerCreditLimitChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCreditLimit = value
				Me.SendPropertyChanged("CustomerCreditLimit")
				Me.OnCustomerCreditLimitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentCarrierId", DbType:="NVarChar(20)")>  _
	Public Property CurrentCarrierId() As String
		Get
			Return Me._CurrentCarrierId
		End Get
		Set
			If (String.Equals(Me._CurrentCarrierId, value) = false) Then
				Me.OnCurrentCarrierIdChanging(value)
				Me.SendPropertyChanging
				Me._CurrentCarrierId = value
				Me.SendPropertyChanged("CurrentCarrierId")
				Me.OnCurrentCarrierIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailPODsFlag", DbType:="Char(1)")>  _
	Public Property EmailPODsFlag() As System.Nullable(Of Char)
		Get
			Return Me._EmailPODsFlag
		End Get
		Set
			If (Me._EmailPODsFlag.Equals(value) = false) Then
				Me.OnEmailPODsFlagChanging(value)
				Me.SendPropertyChanging
				Me._EmailPODsFlag = value
				Me.SendPropertyChanged("EmailPODsFlag")
				Me.OnEmailPODsFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODsEmailAddress", DbType:="NVarChar(50)")>  _
	Public Property PODsEmailAddress() As String
		Get
			Return Me._PODsEmailAddress
		End Get
		Set
			If (String.Equals(Me._PODsEmailAddress, value) = false) Then
				Me.OnPODsEmailAddressChanging(value)
				Me.SendPropertyChanging
				Me._PODsEmailAddress = value
				Me.SendPropertyChanged("PODsEmailAddress")
				Me.OnPODsEmailAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxPODsFlag", DbType:="Char(1)")>  _
	Public Property FaxPODsFlag() As System.Nullable(Of Char)
		Get
			Return Me._FaxPODsFlag
		End Get
		Set
			If (Me._FaxPODsFlag.Equals(value) = false) Then
				Me.OnFaxPODsFlagChanging(value)
				Me.SendPropertyChanging
				Me._FaxPODsFlag = value
				Me.SendPropertyChanged("FaxPODsFlag")
				Me.OnFaxPODsFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODsFaxNumber", DbType:="NVarChar(50)")>  _
	Public Property PODsFaxNumber() As String
		Get
			Return Me._PODsFaxNumber
		End Get
		Set
			If (String.Equals(Me._PODsFaxNumber, value) = false) Then
				Me.OnPODsFaxNumberChanging(value)
				Me.SendPropertyChanging
				Me._PODsFaxNumber = value
				Me.SendPropertyChanged("PODsFaxNumber")
				Me.OnPODsFaxNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostPODsToWebServerFlag", DbType:="Char(1)")>  _
	Public Property PostPODsToWebServerFlag() As System.Nullable(Of Char)
		Get
			Return Me._PostPODsToWebServerFlag
		End Get
		Set
			If (Me._PostPODsToWebServerFlag.Equals(value) = false) Then
				Me.OnPostPODsToWebServerFlagChanging(value)
				Me.SendPropertyChanging
				Me._PostPODsToWebServerFlag = value
				Me.SendPropertyChanged("PostPODsToWebServerFlag")
				Me.OnPostPODsToWebServerFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailLogMovementFlag", DbType:="Char(1)")>  _
	Public Property EmailLogMovementFlag() As System.Nullable(Of Char)
		Get
			Return Me._EmailLogMovementFlag
		End Get
		Set
			If (Me._EmailLogMovementFlag.Equals(value) = false) Then
				Me.OnEmailLogMovementFlagChanging(value)
				Me.SendPropertyChanging
				Me._EmailLogMovementFlag = value
				Me.SendPropertyChanged("EmailLogMovementFlag")
				Me.OnEmailLogMovementFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogMovementEmailAddress", DbType:="NVarChar(50)")>  _
	Public Property LogMovementEmailAddress() As String
		Get
			Return Me._LogMovementEmailAddress
		End Get
		Set
			If (String.Equals(Me._LogMovementEmailAddress, value) = false) Then
				Me.OnLogMovementEmailAddressChanging(value)
				Me.SendPropertyChanging
				Me._LogMovementEmailAddress = value
				Me.SendPropertyChanged("LogMovementEmailAddress")
				Me.OnLogMovementEmailAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCreatedOn", DbType:="SmallDateTime NOT NULL")>  _
	Public Property CustomerCreatedOn() As Date
		Get
			Return Me._CustomerCreatedOn
		End Get
		Set
			If ((Me._CustomerCreatedOn = value)  _
						= false) Then
				Me.OnCustomerCreatedOnChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCreatedOn = value
				Me.SendPropertyChanged("CustomerCreatedOn")
				Me.OnCustomerCreatedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCreatedByKey", DbType:="Int NOT NULL")>  _
	Public Property CustomerCreatedByKey() As Integer
		Get
			Return Me._CustomerCreatedByKey
		End Get
		Set
			If ((Me._CustomerCreatedByKey = value)  _
						= false) Then
				Me.OnCustomerCreatedByKeyChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCreatedByKey = value
				Me.SendPropertyChanged("CustomerCreatedByKey")
				Me.OnCustomerCreatedByKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstJobOn", DbType:="SmallDateTime")>  _
	Public Property FirstJobOn() As System.Nullable(Of Date)
		Get
			Return Me._FirstJobOn
		End Get
		Set
			If (Me._FirstJobOn.Equals(value) = false) Then
				Me.OnFirstJobOnChanging(value)
				Me.SendPropertyChanging
				Me._FirstJobOn = value
				Me.SendPropertyChanged("FirstJobOn")
				Me.OnFirstJobOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastJobOn", DbType:="SmallDateTime")>  _
	Public Property LastJobOn() As System.Nullable(Of Date)
		Get
			Return Me._LastJobOn
		End Get
		Set
			If (Me._LastJobOn.Equals(value) = false) Then
				Me.OnLastJobOnChanging(value)
				Me.SendPropertyChanging
				Me._LastJobOn = value
				Me.SendPropertyChanged("LastJobOn")
				Me.OnLastJobOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeletedFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property DeletedFlag() As Char
		Get
			Return Me._DeletedFlag
		End Get
		Set
			If ((Me._DeletedFlag = value)  _
						= false) Then
				Me.OnDeletedFlagChanging(value)
				Me.SendPropertyChanging
				Me._DeletedFlag = value
				Me.SendPropertyChanged("DeletedFlag")
				Me.OnDeletedFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedByKey", DbType:="Int NOT NULL")>  _
	Public Property LastUpdatedByKey() As Integer
		Get
			Return Me._LastUpdatedByKey
		End Get
		Set
			If ((Me._LastUpdatedByKey = value)  _
						= false) Then
				Me.OnLastUpdatedByKeyChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedByKey = value
				Me.SendPropertyChanged("LastUpdatedByKey")
				Me.OnLastUpdatedByKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedOn", DbType:="SmallDateTime NOT NULL")>  _
	Public Property LastUpdatedOn() As Date
		Get
			Return Me._LastUpdatedOn
		End Get
		Set
			If ((Me._LastUpdatedOn = value)  _
						= false) Then
				Me.OnLastUpdatedOnChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedOn = value
				Me.SendPropertyChanged("LastUpdatedOn")
				Me.OnLastUpdatedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultCommodity", DbType:="NVarChar(50)")>  _
	Public Property DefaultCommodity() As String
		Get
			Return Me._DefaultCommodity
		End Get
		Set
			If (String.Equals(Me._DefaultCommodity, value) = false) Then
				Me.OnDefaultCommodityChanging(value)
				Me.SendPropertyChanging
				Me._DefaultCommodity = value
				Me.SendPropertyChanged("DefaultCommodity")
				Me.OnDefaultCommodityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultCurrencyKey", DbType:="Int NOT NULL")>  _
	Public Property DefaultCurrencyKey() As Integer
		Get
			Return Me._DefaultCurrencyKey
		End Get
		Set
			If ((Me._DefaultCurrencyKey = value)  _
						= false) Then
				Me.OnDefaultCurrencyKeyChanging(value)
				Me.SendPropertyChanging
				Me._DefaultCurrencyKey = value
				Me.SendPropertyChanged("DefaultCurrencyKey")
				Me.OnDefaultCurrencyKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(100)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumberOfPlainPaperConNotes", DbType:="Int NOT NULL")>  _
	Public Property NumberOfPlainPaperConNotes() As Integer
		Get
			Return Me._NumberOfPlainPaperConNotes
		End Get
		Set
			If ((Me._NumberOfPlainPaperConNotes = value)  _
						= false) Then
				Me.OnNumberOfPlainPaperConNotesChanging(value)
				Me.SendPropertyChanging
				Me._NumberOfPlainPaperConNotes = value
				Me.SendPropertyChanged("NumberOfPlainPaperConNotes")
				Me.OnNumberOfPlainPaperConNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDateReportInclusion", DbType:="Bit")>  _
	Public Property ExpiryDateReportInclusion() As System.Nullable(Of Boolean)
		Get
			Return Me._ExpiryDateReportInclusion
		End Get
		Set
			If (Me._ExpiryDateReportInclusion.Equals(value) = false) Then
				Me.OnExpiryDateReportInclusionChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDateReportInclusion = value
				Me.SendPropertyChanged("ExpiryDateReportInclusion")
				Me.OnExpiryDateReportInclusionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultContact", DbType:="NVarChar(50)")>  _
	Public Property DefaultContact() As String
		Get
			Return Me._DefaultContact
		End Get
		Set
			If (String.Equals(Me._DefaultContact, value) = false) Then
				Me.OnDefaultContactChanging(value)
				Me.SendPropertyChanging
				Me._DefaultContact = value
				Me.SendPropertyChanged("DefaultContact")
				Me.OnDefaultContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultTelephone", DbType:="NVarChar(50)")>  _
	Public Property DefaultTelephone() As String
		Get
			Return Me._DefaultTelephone
		End Get
		Set
			If (String.Equals(Me._DefaultTelephone, value) = false) Then
				Me.OnDefaultTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._DefaultTelephone = value
				Me.SendPropertyChanged("DefaultTelephone")
				Me.OnDefaultTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultEmail", DbType:="NVarChar(100)")>  _
	Public Property DefaultEmail() As String
		Get
			Return Me._DefaultEmail
		End Get
		Set
			If (String.Equals(Me._DefaultEmail, value) = false) Then
				Me.OnDefaultEmailChanging(value)
				Me.SendPropertyChanging
				Me._DefaultEmail = value
				Me.SendPropertyChanged("DefaultEmail")
				Me.OnDefaultEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultFax", DbType:="NVarChar(50)")>  _
	Public Property DefaultFax() As String
		Get
			Return Me._DefaultFax
		End Get
		Set
			If (String.Equals(Me._DefaultFax, value) = false) Then
				Me.OnDefaultFaxChanging(value)
				Me.SendPropertyChanging
				Me._DefaultFax = value
				Me.SendPropertyChanged("DefaultFax")
				Me.OnDefaultFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountHandlerKey", DbType:="Int")>  _
	Public Property AccountHandlerKey() As System.Nullable(Of Integer)
		Get
			Return Me._AccountHandlerKey
		End Get
		Set
			If (Me._AccountHandlerKey.Equals(value) = false) Then
				Me.OnAccountHandlerKeyChanging(value)
				Me.SendPropertyChanging
				Me._AccountHandlerKey = value
				Me.SendPropertyChanged("AccountHandlerKey")
				Me.OnAccountHandlerKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExplicitProductPermissions", DbType:="Bit")>  _
	Public Property ExplicitProductPermissions() As System.Nullable(Of Boolean)
		Get
			Return Me._ExplicitProductPermissions
		End Get
		Set
			If (Me._ExplicitProductPermissions.Equals(value) = false) Then
				Me.OnExplicitProductPermissionsChanging(value)
				Me.SendPropertyChanging
				Me._ExplicitProductPermissions = value
				Me.SendPropertyChanged("ExplicitProductPermissions")
				Me.OnExplicitProductPermissionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultUnitOfWeightKey", DbType:="Int")>  _
	Public Property DefaultUnitOfWeightKey() As System.Nullable(Of Integer)
		Get
			Return Me._DefaultUnitOfWeightKey
		End Get
		Set
			If (Me._DefaultUnitOfWeightKey.Equals(value) = false) Then
				Me.OnDefaultUnitOfWeightKeyChanging(value)
				Me.SendPropertyChanging
				Me._DefaultUnitOfWeightKey = value
				Me.SendPropertyChanged("DefaultUnitOfWeightKey")
				Me.OnDefaultUnitOfWeightKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultServiceLevelKey", DbType:="Int")>  _
	Public Property DefaultServiceLevelKey() As System.Nullable(Of Integer)
		Get
			Return Me._DefaultServiceLevelKey
		End Get
		Set
			If (Me._DefaultServiceLevelKey.Equals(value) = false) Then
				Me.OnDefaultServiceLevelKeyChanging(value)
				Me.SendPropertyChanging
				Me._DefaultServiceLevelKey = value
				Me.SendPropertyChanged("DefaultServiceLevelKey")
				Me.OnDefaultServiceLevelKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailPlainTextOnly", DbType:="Bit")>  _
	Public Property EmailPlainTextOnly() As System.Nullable(Of Boolean)
		Get
			Return Me._EmailPlainTextOnly
		End Get
		Set
			If (Me._EmailPlainTextOnly.Equals(value) = false) Then
				Me.OnEmailPlainTextOnlyChanging(value)
				Me.SendPropertyChanging
				Me._EmailPlainTextOnly = value
				Me.SendPropertyChanged("EmailPlainTextOnly")
				Me.OnEmailPlainTextOnlyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsesCategories", DbType:="Bit")>  _
	Public Property UsesCategories() As System.Nullable(Of Boolean)
		Get
			Return Me._UsesCategories
		End Get
		Set
			If (Me._UsesCategories.Equals(value) = false) Then
				Me.OnUsesCategoriesChanging(value)
				Me.SendPropertyChanging
				Me._UsesCategories = value
				Me.SendPropertyChanged("UsesCategories")
				Me.OnUsesCategoriesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WarehouseId", DbType:="Int")>  _
	Public Property WarehouseId() As System.Nullable(Of Integer)
		Get
			Return Me._WarehouseId
		End Get
		Set
			If (Me._WarehouseId.Equals(value) = false) Then
				Me.OnWarehouseIdChanging(value)
				Me.SendPropertyChanging
				Me._WarehouseId = value
				Me.SendPropertyChanged("WarehouseId")
				Me.OnWarehouseIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccessPolicy", DbType:="Int")>  _
	Public Property AccessPolicy() As System.Nullable(Of Integer)
		Get
			Return Me._AccessPolicy
		End Get
		Set
			If (Me._AccessPolicy.Equals(value) = false) Then
				Me.OnAccessPolicyChanging(value)
				Me.SendPropertyChanging
				Me._AccessPolicy = value
				Me.SendPropertyChanged("AccessPolicy")
				Me.OnAccessPolicyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultInactivityAlertDays", DbType:="Int")>  _
	Public Property DefaultInactivityAlertDays() As System.Nullable(Of Integer)
		Get
			Return Me._DefaultInactivityAlertDays
		End Get
		Set
			If (Me._DefaultInactivityAlertDays.Equals(value) = false) Then
				Me.OnDefaultInactivityAlertDaysChanging(value)
				Me.SendPropertyChanging
				Me._DefaultInactivityAlertDays = value
				Me.SendPropertyChanged("DefaultInactivityAlertDays")
				Me.OnDefaultInactivityAlertDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EORI", DbType:="VarChar(21)")>  _
	Public Property EORI() As String
		Get
			Return Me._EORI
		End Get
		Set
			If (String.Equals(Me._EORI, value) = false) Then
				Me.OnEORIChanging(value)
				Me.SendPropertyChanging
				Me._EORI = value
				Me.SendPropertyChanged("EORI")
				Me.OnEORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Customer_LogisticProduct", Storage:="_LogisticProducts", ThisKey:="CustomerKey", OtherKey:="CustomerKey")>  _
	Public Property LogisticProducts() As EntitySet(Of LogisticProduct)
		Get
			Return Me._LogisticProducts
		End Get
		Set
			Me._LogisticProducts.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_LogisticProducts(ByVal entity As LogisticProduct)
		Me.SendPropertyChanging
		entity.Customer = Me
	End Sub
	
	Private Sub detach_LogisticProducts(ByVal entity As LogisticProduct)
		Me.SendPropertyChanging
		entity.Customer = Nothing
	End Sub
End Class
